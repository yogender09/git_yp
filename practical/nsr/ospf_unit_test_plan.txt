                     OSPF Non Stop Routing
                     #####################

Author: Kalyan Bade (kalyan@juniper.net)

Copyright (C) 2005, Juniper Networks, Inc.

NOTICE: This document contains proprietary and confidential
information of Juniper Networks, Inc. and must not be distributed
outside of the company without the permission of Juniper Networks
engineering.

1.  INTRODUCTION
 
    This document is the unit test plan for Non-Stop Routing to OSPF. The goal
    of Non-Stop Routing is to be able to fail-over between an active and standby
    RE without this being a visible event to routing protocol peers. 

1.1 Tracking

    RLI: 2713
    PR: 63857

1.2 References

    o Functional specification at sw-projects/os/nsr/ospf_software_spec.txt

2.  SETUP

    See setup under each testcase.

3.  FUNCTIONAL TEST CASES

    The functional test cases can be broadly divided into two categories,
    initial synchronization & ongoing synchronization. The interesting info that
    needs to be synced is the neighbor information, LSA information and some 
    dynamic information related to an interface.

3.1 Synchronization channels

    For neighbor/interface specific replication information, we use the mirror
    subsystem to replicate stuff to the standby. For LSA information, we create
    a special NSR interface in a dummy (NSR) instance and run OSPF protocol over
    it. The LSAs are exchanged using the protocol machinery.
  
    On the standby, a new command is added which shows the information being
    replicated. "show ospf(3) replication neighbor/interface/database"

    a) Mirror subsystem
       
    The mirror subsystem related test cases are covered under a different test 
    plan.
  
    b) NSR interface
 
    The NSR interface/instance is created when the first OSPF instance is 
    created and deleted when the last OSPF instance goes away. The NSR instance
    is called "__juniper_private1__". All the OSPF commands under this special
    instance should work.

    Setup: 
    +--------+
    |   R1   | R1 being the DUT (dual RE system)
    +--------+

    Test Steps:
    o Create an OSPF instance. Make sure that NSR instance is created.
    o Delete the OSPF instance created. the NSR instance should go away.

    Success Criteria:
    o Check whether the NSR instance is present by verifying the output of
      "show task summary" (check for OSPF task called __juniper_private1__*)
      or any OSPF commands with instance name __juniper_private1__

3.2 Initial synchronization

    a) Neighbor replication

    Setup: 
    +--------+ -- intf 1 -- +--------+
    |   R1   | -- intf 2 -- |   R2   |
    +--------+ -- intf 3 -- +--------+ 
    R1 being the DUT (dual RE system)

    Test Steps:
    o On active R1, neighbors are established on different interfaces (p2p/lan/
      nbma/p2mp/virtual/sham links)
    o Start rpd/ppmd on the standby.
 
    Success Criteria: 
    o All the full neighbors are replicated on standby. The neighbors not in
      full state are not replicated.
    o Run the regular neighbor debug commands on the standby to veirfy things
      are working. The neighbors are marked as donotage as we don't want to
      timeout the adjacencies on the standby because of lack of hellos.

    Results: 

    b) Interface replication

    In case of OSPFv3 interfaces, the internal index is dynamically created on 
    the master. The same index should be used on the interfaces created on the
    standby. Similar the sham link ifl index generated on the master should be
    replicated to the standby so that it uses the same ifl index.

    Setup: 
    +--------+ -- intf 1
    |   R1   | -- intf 2
    +--------+ -- intf 3
    R1 being the DUT (dual RE system)

    Test Steps:
    o Configure OSPFv3 interfaces.
    o Configure sham link interfaces.
 
    Success Criteria: 
    o The internal indices of OSPFv3 interfaces are same on the active and
      standby RE.
    o The ifl index of sham link interfaces should be same on active and 
      standby RE.

    Results: 

    c) LSA replication

    The LSAs are replicated using the protocol machinery within a NSR instance.
    The master NSR neighbor runs DBD with the standby neighbor and updates the
    LSA database on the standby.

    Setup: 
    +--------+ -- intf 1 -- +--------+
    |   R1   | -- intf 2 -- |   R2   |
    +--------+ -- intf 3 -- +--------+ 
    R1 being the DUT (dual RE system)

    Test Steps:
    o On the master, make sure all different types of LSAs (global/area/link 
      local scope) are present.
    o Run rpd/ppmd on the standby.
 
    Success Criteria: 
    o All the LSAs are installed on the standby.
    o Run the regular database debug commands on the standby to veirfy things
      are working.

    Results: 

3.3 Ongoing synchronization

    a) Neighbor replication

    Setup: 
    +--------+ -- intf 1 -- +--------+
    |   R1   | -- intf 2 -- |   R2   |
    +--------+ -- intf 3 -- +--------+ 
    R1 being the DUT (dual RE system)

    Test Steps:
    o On active R1, bring up/down the neighbors.
 
    Success Criteria: 
    o The neighbors are being added/deleted on the standby.
    o Run the regular neighbor debug commands on the standby to veirfy things
      are working. 

    Results: 

    b) Interface replication

    Setup: 
    +--------+ -- intf 1
    |   R1   | -- intf 2
    +--------+ -- intf 3
    R1 being the DUT (dual RE system)

    Test Steps:
    o Configure OSPFv3 interfaces.
    o Configure sham link interfaces.
 
    Success Criteria: 
    o The internal indices of OSPFv3 interfaces are same on the active and
      standby RE.
    o The ifl index of sham link interfaces should be same on active and 
      standby RE.

    Results: 

    c) LSA replication

    The LSAs are replicated using the protocol machinery within a NSR instance.
    The master NSR neighbor floods the LSA to the standby so that LSA is also
    installed on the standby.

    Setup: 
    +--------+ -- intf 1 -- +--------+
    |   R1   | -- intf 2 -- |   R2   |
    +--------+ -- intf 3 -- +--------+ 
    R1 being the DUT (dual RE system)

    Test Steps:
    o On the master, create/purge LSAs.
 
    Success Criteria: 
    o The LSAs on the standby should be installed/destroyed depending on the
      state of the LSA received from the master.
    o Run the regular database debug commands on the standby to veirfy things
      are working.

    Results: 


4.  BOUNDARY TEST CASES


5.  REGRESSION TEST CASES

    The whole suite of OSPF regressions should be run.

6.  INTEROP TEST CASES

    This feature is stateful replication of data between REs within the router,
    so interoperability does not apply here.

7.  MIGRATION & COMPATIBILITY TEST CASES


8.  TEST COVERAGE REMAINING


9.  DEFECTS REMAINING
