$Id: rsvp_nsr_transit_utp.txt,v 1.3 2008/11/24 08:15:14 avneesh Exp $

S3.02.P05.T02
{Standard Unit Test Plan Template}

Copyright (C) 2004, Juniper Networks, Inc.

NOTICE: This document contains the proprietary and confidential
information of Juniper Networks, Inc., and must not be
distributed outside of the company without the
permission of Juniper Engineering.

[This document is a template for a standard unit test plan for use in
Juniper engineering projects.  To use this document just change the
contents of appropriate sections (marked with {}).  ANYTHING NOT
MARKED 'AS NECESSARY' MUST BE INCLUDED.  If you do not need to fill
out a section, leave it blank or mark it n/a -- do not delete it.

1.  INTRODUCTION

This document describes the unit test plan for RSVP non-stop routing
functionality for transit nodes.

RLI         : 3167
Tracking PR : 66381
Functional spec : sw-projects/os/nsr/rsvp-funcspec.txt

2.  SETUP

A) Setup for basic NSR transit testing:

    Ingress            DUT             Egress
  +--------+        +--------+       +--------+
  | pro9-a +--------+ pro9-b +-------+ pro9-c |
  +--------+        +--------+       +--------+
                 

B) Setup for NSR egress testing:

    Ingress           transit          DUT
  +--------+        +--------+       +--------+
  | pro9-a +--------+ pro9-b +-------+ pro9-c |
  +--------+        +--------+       +--------+
                 

C) Setup for FRR testing:

    Ingress            DUT             Egress
  +--------+        +--------+       +--------+
  | pro9-a +--------+ pro9-b +-------+ pro9-c |
  +---+----+        +---+----+       +----+---+
                        |                 |
                        |                 |
                    +---+----+       +----+---+
                    | pro9-e +-------+ pro9-f | 
                    +--------+       +--------+
                         Detour path ->


The device under test is a dual-RE m10i.

typical config used on DUT:

chassis {
    redundancy {
        graceful-switchover;
    }
}
interfaces {
..........
}
routing-options {
    nonstop-routing;
}
protocols {
    rsvp {
        traceoptions {
            file rsvp.log size 1m;
            flag state;
            flag error;
            flag event;
            flag nsr-synchronization;
        }
        refresh-time 60;
        interface all {
            aggregate;
            reliable;
            hello-interval 10;
        }
    }
    mpls {
        interface all;
    }
    ospf {
        traffic-engineering;
        area 0.0.0.0 {
            interface all;
            interface fxp0.0 {
                disable;
            }
        }
    }
}

3. FUNCTIONAL TEST CASES

3.1 Basic transit NSR testing.

3.1.1	Basic RSVP state replication to standby.
    Goal: Test that basic RSVP state is replicated to standby.
    Test Steps:
        1. In a setup shown in picture A), configure an LSP from pro9-a
        to pro9-c.
        2. Configure graceful-switchover and nonstop-routing on the DUT.
        3. On standby look at various RSVP states like:
             - interface state
             - neighbor state
             - session state
        4. They all should be identical to the one on the master.
        5. Timestaps are allowed to be different.
    Success Criteria: States should be identical on standby.
    Results:  Pass

3.1.2 State timeouts on the standby.
    Goal: Verify that no RSVP state is timed out on the standby.
    Test Steps:
        1. On a setup identical to previous test, verify that Neighbor
        and session states are not timed out.
    Success Criteria: State should not be timed out on standby.
    Results:  Pass

3.1.3 RSVP state is preserved across NSR switchovers.
    Goal: Verify that RSVP state is preserved across NSR switchovers.
    Test Steps:
        1. Use a setup shown in picture A)
        2. Configure couple of LSPs from pro9-a to pro9-c.
        3. Configure nonstop routing on DUT.
        4. wait till "show rsvp version" on standby shows "Init sync
        ompleted" and issue a switchover.
        5. Enable RSVP tracing on the neighboring routers.
        6. Looking at rsvp session, rsvp neighbor and trace file on the
        neighbor router, verify NSR switchover had no effect on the
        neighbor.
        7. Run an LSP ping from ingress to egress and make sure ping is
        not disrupted during the switchover.
        8. Look at the PFE IPC counters on DUT to make sure there was no
        forwarding state change.
    Success Criteria: NSR switchover should happen without any
    disruption to traffic and without neighbors noticing it.
    Results:  Pass

3.2 Egress NSR testing.

3.2.1 RSVP NSR switchover when DUT is the LSP egress point.
    Goal: Verify RSVP state is replicated correctly when DUT is the LSP
    egress point and the switchover is hitless.
    Test Steps:
        1. Use the setup shown in picture B)
        2. Configure nonstop-routing on DUT (pro9-c)
        3. Configure couple of LSPs from pro9-a to pro9-c
        4. Makse sure RSVP session is created correctly on standby.
        5. Egress is slightly different from transit because RESV-state
        on egress is not created based on an incoming RESV message. Its
        created based on incoming PATH message.
        6. Due to penultimate-hop poping, there is no forwarding state
        associated with the LSP on egress router.
        7. Verify during switchover that RSVP session and neighbor
        states are not disrupted on neighboring routers.
    Success Criteria:  Neighbors should not notice the switchover.
    Results:  Pass

3.3 Fast Reroute testing.

3.3.1 fast-reroute replication test
    Goal: Verify that fast-reroute state is replicated correctly to standby.
    Test Steps:
        1. Use the setup shown in pict C)
        2. Configure an LSP from pro9-a to pro9-c
        3. Configure fast-reroute on the LSP.
        4. Main LSP will take pro9-a-->pro9-b-->pro9-c path and There
        will be a detour established in
        pro9-b-->pro9-e-->pro9-f-->pro9-c path.
        5. Run "show rsvp session extensive" commands on master and
        standby and verify both are identical.
    Success Criteria: Both master and standby should have same session
    parameters.
    Results:  Pass

3.3.2 Fast-reroute preservation across switchover.
switchovers.
    Goal: Verify that fast-reroute state is preserved across NSR switchovers.
    Test Steps:
        1. Use a config identical to above test.
        2. Switchover from master to standby.
        3. Using tracing, looking at rsvp session and neighbor states on
        the neighboring routers, verify that switchover had no affect on
        the neighbors.
    Success Criteria: Switchover should have no effect on the neighbors.
    Results:  Pass


3.4 Misc features testing

3.4.1 Refresh Reduction testing

    Goal: Verify that Refresh reduction state for Path/Resv messages
    is replicated correctly and RSVP continues to use the replicated
    message IDs after RE switchover.

    Test Steps:

        1. Use the setup shown in pict C).

        2. Configure a couple LSPs from pro9-a to pro9-c.

        3. Configure 'aggregate' and 'reliable' knobs on the all
           routers involved. This way RSVP starts exchanging
           message-ids and starts issuing ACKs. It will also start
           sending summary-refreshes.

        4. Verify that refresh reduction IDs (and epoch) for Path
           (both main and detour) and Resv messages are replicated
           correctly to the standby.

        5. Wait for the standby to reach the 'Init sync complete'
           state and trigger an RE switchover.

        6. Examine packet traces on neighbors and verify that the new
           master RE continues to send messages with the same message
           IDs and epoch.

        7. Verify that LSPs stay up and that the system forwards
           packets continuously across switchover.

    Success Criteria: Message IDs should be preserved, LSPs should not
    be dropped.

    Results: Passed partially (see note below).

    Note: When a transit LSP is protected by a detour, the box
          sometimes changes the message IDs of Path messages after
          switchover. This needs more investigation.

          This behavior limits scalibility but does not impact correct
          operation.

3.4.2 Attribute change reflected to standby.
    Goal: Verify that attribute changes like changing bandwidth are
    reflected from primary to standby.
    Test Steps:
        1. Use the setup shown in pict A)
        2. Configure an LSP from pro9-a to pro9-c configure a bandwidth
        for the LSP.
        3. Configure nonstop-routing on pro9-b.
        4. Verify rsvp session is UP on standby.
        5. Change the bandwidth of the LSP.
        6. Verify on standby session shows new bandwidth.
    Success Criteria: Changes should be propagated to standby.
    Results: Pass

3.4.3 Repeated switchover test.
    Goal: Goal of this test to stress test the RSVP transit NSR by
    repeatedly performing NSR switchovers with relatively large number
    of LSPs and verify LSP state does not change.
    Test Steps:
        1. Use the setup shown in Pict A)
        2. Configure couple of thousand LSPs from pro9-a to pro9-c.
        3. Configure nonstop-routing on pro9-b.
        4. Wait till the LSPs come up and perform an NSR switchover to
        standby.
        5. Wait for 1-2 minutes and Switchover back to the original
        master.
        6. Repeat above two steps every 1-2 minutes for a while.
    Success Criteria: Repeated switchover should not affect the LSPs.
    Neighbors should not notice the switchover.
    Results:  Pass

3.4.4 Recovery from config differences

    Goal: JUNOS currently requires that 'commit synchronize' be used
          whenever NSR is configured. However, configuration on the
          REs can be out-of-sync transiently. The goal of this test is
          to verify that the standby recovers from these differences
          and mirrors the master's state correctly.

	  The following steps assume that a special image can be
	  created that allows 'nonstop-routing' to be configured
	  without 'commit synchronize'. If not, we will not be able to
	  observe intermediate states and will just have to verify
	  that the standby is eventually in sync with the master.

    Test Steps:

        1. Use the setup shown in pict A)

        2. Configure few hundred LSPs from pro9-a to pro9-b.

        3. Wait till the LSPs come up on both REs. 

        4. Deactivate 'protocols rsvp' on the standby RE and commit.

        5. Wait till rsvp session state is cleaned up on standby.

        6. Activate 'protocols rsvp' on the standby and verify that
           rsvp sessions reappear.

        7. On the standby RE, disable rsvp on an interface where LSPs
           are passing through. Renable it and verify rsvp sessions
           come back.

        8. On the standby RE, configure a low 'rsvp interface
           bandwidth' on the LSP egress interface such that some of
           the LSPs fail admission-control. Restart RPD to make sure
           session state is deleted. Now, master has some LSPs and
           standby does not. At least, they are in 'Down' state on the
           standby. Perform a 'commit sync' on the master RE. Now, all
           RSVP sessions should come back up on the standby within 1-2
           minutes.

        9. Configure a low bandwidth on an interface on master such
           that it is not enough to allow all LSPs. Invoke 'commit
           synchronize'. Wait till some of the LSPs go away. Restore
           the bandwidth configuration on the mater RE and
           commit. Wait for the LSPs to come back up on the master
           RE. Verify that they are still down on the standby. Now,
           invoke 'commit synchronize' on master. Verify RSVP sessions
           recover on standby.

    Success Criteria: Standby should recover from all above mentioned
                      differences.

    Results: Pass (tested with special image as indicated above).

3.4.5 Switchover while paths are being setup.
    Goal: Verify that RSVP recovers even when a switchover is performed
    while some path setup is in progress.
    Test Steps:
        1. Use the setup shown in Pict C)
        2. Configure few thousand LSPs from pro9-a to pro9-c and pro9-a
        to pro9-d.
        3. While path setup is in progress, Perform an NSR switchover on
        pro9-b.
        4. Verify that all the LSPs eventually recover and they dont
        drop traffic by randomly issuing ping on the LSPs.
        5. Its hard to verify there were no traffic drops on the LSPs
        that were already established in this perticular test. Instead
        we only verify all the LSPs eventually recover. It would be nice
        if systest has some way of verifying no LSPs went down as a
        result of switchover(Its OK if an LSP which was in process of
        establishing went down, as in Ingress had sent out a PATH
        message and waiting for RESV, but never received it. Because,
        we'll eventually retry it. But, If we had received RESV on any
        LSP, it should not go down).
    Success Criteria: ALl the LSPs should eventually recover.
    Results:  Pass


3.4.6 Delay in setting up new paths when standby comes up

    Goal: To measure the delay in setting up new paths when standby RE
          first comes up.

    We do not send Resv messages to the upstream hop of an LSP until
    the label allocated for the LSP has been replicated to the standby
    RE.

    We need to make sure that this prolongs the LSP setup by a
    relatively short time, even when the LSP is being brought up
    during the intial sync of state to the standby RE.

    The following steps estimate the worst case delay by measuring the
    time it takes to sync state to the standby RE.

    Test Steps:

        1. Use the setup shown in C)

        2. Configure full-mesh of LSPs between pro9-a, pro9-c, pro9-e,
           and pro9-f. create few thousand LSPs between each
           pair. Make sure large number of these LSPs pass thru
           pro9-b.

        3. Wait till all the LSPs come up and configure NSR.

        4. Measure how long it takes for the standby RE to sync up.
	   
	   - Run 'show rsvp version' and note when the standby reaches
	     'Init sync complete'  state.

	   - Run 'show rsvp session terse' and measure how long it
	     takes for all LSPs to be up.

    Success Criteria: This initial sync time should be few tens of
                      seconds.

    Results:  Pass

	      State for 12,000 LSPs was mirrored in ~10 seconds.

3.4.7 Standby RE deletes all of its state when master restarts.
    Goal: Verify standby deletes all the state when MAPI connection to
    master goes down and comes back up.
    Test Steps:
        1. Use the setup shown in pic A)
        2. Configure few hundred LSPs from pro9-a to pro9-c
        3. Verify all the sessions are UP on standby.
        4. Restart the RPD on the master.
        5. keep isuing 'show rsvp session terse' and 'show rsvp
        replication path-state' on the standby and verify they are all
        cleared when connection to master is restablished.
    Success Criteria: Standby should clear all of its state when
    connection to master is restablished.
    Results:  Pass

3.4.8 Labels are not advertised before replicating it to standby.
    Goal: Verify master doen not send RESV message upstream till it
    receives an ACK from the standby.
    Test Steps:
        1. Use the setup shown in pict A)
        2. Configure an LSP from pro9-a to pro9-c.
        3. Look at the packet tracing and nsr tracing on the master and
        verify that RESV message is sent upstream only after standby
        acknowledges it.
    Success Criteria: RESV message should not be sent before the ACK.
    Results:  Pass

4.  BOUNDARY TEST CASES

n/a


5.  REGRESSION TEST CASES

n/a

6.  INTEROP TEST CASES

n/a

7.  MIGRATION & COMPATIBILITY TEST CASES

n/a

8.  TEST COVERAGE REMAINING

1. Test to measure the delay in setting up new paths when standby comes
up and master has an extermely large state. Like few hundred thousand
BGP routes, large numbr of OSPF LSAs, large number of VPN routes, a
large LDP config etc would be useful.

2. Also on a large config, it would be interesting to measure how long
do we miss our refresh and hello  messages after switchover.

9.  DEFECTS REMAINING

1. The software may change the refresh reduction message IDs of RSVP
   messages after switchover in some situations. See results of test
   3.4.1 above.
