$Header: /cvs/juniper/sw-projects/os/nsr/pim-nsr-rosen-mvpn-funcspec.txt,v 1.3 2011/04/13 18:05:32 yizhang Exp $


Process Template J3.02.P05.T01S

PIM NSR support for Draft Rosen MVPN Functional Specification

Auther: Yi Zhang <yizhang@juniper.net>

Copyright (C) 2011, Juniper Networks, Inc.

NOTICE: This document contains proprietary and confidential
information of Juniper Networks, Inc. and must not be distributed
outside of the company without the permission of Juniper Networks
engineering.



TABLE OF CONTENTS

1.	INTRODUCTION
1.1	DOCUMENT REVISION HISTORY
1.2	REFERENCE
1.3	RLI LIST
1.4     FEATURE PARITY TRACEABILITY
2.	FUNCTIONALITY
2.1	GOALS
2.2	NON-GOALS
2.3	FUNCTIONAL COMPETITIVE DATA
2.4	APIS/MESSAGES
2.5	CLI CONFIG
2.5.1	CLI CONFIG DETAILS
2.6	CLI COMMANDS
2.6.1	CLI COMMAND DETAILS
2.7	JUNOSCRIPT
2.8	J-WEB QUICK CONFIGURATION AND MONITOR SCREEN
2.9	SNMP
2.10	SYSLOG – ERRMSG
2.11	SERVICEABILITY AND DIAGNOSE-ABILITY
2.12	ASSUMPTIONS
2.13	CONSTRAINTS AND LIMITATIONS
2.14	DEPENDENCIES AND INTERACTIONS WITH OTHER COMPONENTS IN THE SYSTEM
2.15	EXAMPLES OR INTERACTION DESCRIPTIONS
2.16	FREE SOFTWARE CONSIDERATIONS
2.17	3RD PARTY SOFTWARE CONSIDERATIONS
2.17.1	3RD PARTY SOFTWARE PACKAGE INFORMATION AND ITS FUNCTIONALITY
2.17.2	ANTICIPATED USAGE OF 3RD PARTY CODE
2.17.3	ANTICIPATED INTEGRATION RULES WITHIN JUNOS
3.	CAVEATS
4.	OTHER REQUIREMENTS
5.	PERFORMANCE
5.1	PERFORMANCE RELATED RESOURCES
5.2	TARGET PERFORMANCE
6.	COMPATIBILITY ISSUES
7.	SECURITY ISSUES
8.	PLATFORMS SUPPORTED
9.	HIGH AVAILABILITY (HA)
9.1	GRACEFUL RE SWITCHOVER (GRES) OR ISSU IMPACT
9.2	NSR IMPACT
10.	AGGREGATED ETHERNET/SONET SUPPORT
11.	SDK IMPACT
11.1	SDK CUSTOMER USAGE
12.	SERVICES/JSF (JUNOS SERVICES FRAMEWORK) IMPACT
13.	JUNOS READY SOFTWARE CONSIDERATIONS
14.	MULTI-CHASSIS SUPPORT
15.	64-BIT SUPPORT
16.	LOGICAL SYSTEM SUPPORT
17.	NOTES
18.	GLOSSARY
19.	Design Specification exception
20.	REVIEW COMMENTS
20.1	REVIEW STAKEHOLDER MATRIX




1. INTRODUCTION

This document describes the functional details of Non Stop Routing (NSR) 
support for draft Rosen MVPN. 

Currently in Graceful RE Switchover (GRES), when the master RE fails, the 
backup RE will take over. PIM on the new master RE will re-learn the PIM states 
from scratch. This would take some time and cause the loss of the existing and 
new multicast traffic during the PIM state re-building. 

PIM also supports Graceful Restart (GR). GR with GRES offers non_disruption 
for existing multicast flows, but it can't support new multicast flows or the 
update of the existing multicast flows during the graceful restart period. 

PIM NSR is supported for plain PIM or virtual router scenarios. PIM NSR 
improves upon GR by synchronizing the most PIM states to the backup RE and 
further reducing the multicast states re-building time after the RE switch over.
 RPD and PIM are now running on both master and backup REs. The master RE 
synchronizes its PIM states to the backup RE, so the backup RE doesn't need to 
re-learn the PIM states after the RE switch-over. PIM NSR can protect existing 
multicast flows and accept new multicast flows immediately after the RE switch 
over.

NSR for draft Rosen MVPN extends the PIM NSR support to Rosen MVPN scenarios. 
Besides regular PIM states, PIM now also synchronizes mdt states, including 
default mdt and data mdt states, to the backup RE. After RE switch over, the 
new master RE will keep the existing default mdts and data mdts in all related 
VRF instances. This support eliminates the time to re-learn the PIM neighbor 
over default mdt or transition between default mdts and data mdts. 

1.1 DOCUMENT REVISION HISTORY

Revision: 1.0
 Author:  Yi Zhang
 Date : 03/01/2011
 Description of Changes: Initial draft.


1.2 REFERENCE
	
[PIM-NSR-FS]   PIM NSR Functional Specification. RLI 2728
               sw-projects/os/nsr/pim-nsr-funcspec.txt

[PIM-NSR-DS]   PIM NSR Design Specification. 
               sw-projects/os/nsr/pim-nsr-designspec.txt

[PIM-NSR-2]    PIM NSR Phase 2 and Phase 3 Functional Specification
               RLI 6259, RLI 11800
               sw-projects/os/nsr/pim-nsr-6259-11800-funcspec.txt

[PIM-SM]       Protocol Independent Multicast - Sparse Mode (PIM-SM)
               RFC 4601


1.3 RLI LIST

    +-------+-------------------------------------------+---------+--------+
    | RLI   | Description                               | Release | PR     |
    +-------+-------------------------------------------+---------+--------+
    | 12174 | PIM NSR support for Draft Rosen MVPN      | 12.2    | 563513 |
    +-------+-------------------------------------------+---------+--------+


1.4 FEATURE PARITY TRACEABILITY

Not applicable.

2. FUNCTIONALITY

Rosen MVPN can be viewed as a hierarchical PIM scenario. Each PE setups a 
multicast tunnel (MT) with all other PEs, using PIM within the provider space. 
The multicast tunnel functions as a common LAN among all PEs. Each PE exchanges 
PIM Hello and brings up PIM neighborship with all other PEs over the multicast 
tunnel. After the MT is setup, PIM works in the VRF instances as regular PIM 
protocol.

All the multicast traffic across the provider domain are initially carried by 
the multicast tunnel (AKA default mdt). User can configure data mdt for 
specified customer multicast flows. Data mdt carries the multicast flow only to 
the PEs who are interested in the flow. Data mdt is maintained on both the 
ingress PE and the egress PE.

Rosen NSR synchronizes both default mdts and data-mdts between the two REs. The 
backup RE can setup the default mdts based on the configuration and the info 
fed by the master RE. After unicast NSR syncs the BGP and other unicast routes 
and PIM NSR syncs neighbor and Join/Prune states, the backup RE can now 
maintain all the PIM states related to the default mdts. 

Since PIM/multicast on the backup RE doesn't monitor the rate or statistics for 
the multicast flows, the backup RE can't make its own decision to move the 
multicast flows to/from the data mdt. Instead, whenever the master RE move one 
multicast flow onto or off a data mdt, it will mirror this info to the back up 
RE which will take the same action. The backup RE will then maintain the data 
mdt associated with the same c-sgs as on the master RE.

The backup RE maintains data mdts, but it doesn't create or maintain the data 
mdt delay timer or the data mdt timeout timer. It doesn't send data mdt Join 
TLV either. After RE fail over, the new master RE will send data mdt Join TLV 
for each data mdt, and then start the data mdt periodic timer. The new master 
RE also starts the data mdt timeout timer if this PE is an egress PE. Since the 
data mdt periodic timer and the data mdt timeout timer are reset on the new 
master RE, the expiration time of those timers could be different from that on 
the old master RE. This difference is considered acceptable. 


2.1 GOALS

Rosen MVPN, including Rosen6 (PIM-ASM as provider tunnel) and Rosen7 (PIM-SSM 
as provider tunnel).

All Rosen MVPN related features, including data-mdt reuse, data-mdt caching, 
default-vpn-source, rpf-selection, and vpn-tunnel-source.


2.2 NON-GOALS

NGen-MVPN NSR is not covered in this feature.


2.3 FUNCTIONAL COMPETITIVE DATA

Not avaliable.

2.4 APIs/MESSAGES

N/A

2.5 CLI CONFIG

No new configuration will be added. In stead, we will lift the restriction for 
PIM NSR configuration. In previous releases, if we want to enable NSR in Rosen 
MVPN configuration, we have to disable PIM NSR in the global PIM protocol. 
Otherwise the commit will fail. Now we remove the restriction.

Rosen7 uses part of MVPN configuration. Since we don't support NGen-MVPN NSR 
yet, we'll only allow MVPN configuration for Rosen7 when PIM NSR is enabled. 
Other MVPN configurations will lead to a commit failure. 

Rosen NSR will support both old and new Rosen configurations. The next section 
will describe the old and new formats.

2.5.1	CLI CONFIG DETAILS

We used to have very different configurations for Rosen6 and Rosen7 MVPN. 
Later on we changed the configurations into a unified format. Rosen NSR will 
support both formats. 

2.5.1.1 Old configurations before release 11.4

Rosen6 example:

routing-instances {
    VPN-A {
        protocols {
            pim {
                vpn-group-address 239.1.1.1;
                mdt {
                    ...
                }
            }
        }
    }
}


Rosen7 example:

protocols {
    bgp {
        group ibgp {
            family inet-mdt {
                signaling;
            }
        }
    }
}

routing-instances {
    VPN-A {
        provider-tunnel {
            pim-ssm {
                group-address 232.1.1.1;
            }
        }
        protocols {
            pim {
                mvpn {
                    autodiscovery {
                        inet-mdt;
                    }
                }
                ...
            }
            mvpn {
                autodiscovery-only {
                    intra-as {
                        inclusive;
                    }
                }
            }
        }
    }
}

2.5.1.2 New configurations after release 11.4

Rosen6 example:

routing-instances {
    VPN-A {
        provider-tunnel {
            pim-asm {
                family inet {
                    group-address 239.1.1.1;
                }
            }
        }
        protocols {
            pim {
                mvpn;
            }
        }
    }
}

Rosen7 example: 

protocols {
    bgp {
        group ibgp {
            family inet-mdt {
                signaling;
            }
        }  
    }
}

routing-instances {
    VPN-A {
        provider-tunnel {
            pim-ssm {
                family inet {
                    group-address 232.1.1.1;    
                }
            }    
        }    
        protocols {
            pim {
                mvpn {
                    family inet {
                        autodiscovery {
                            inet-mdt;
                        }
                    }
                }
                ...
            }
            mvpn {
                family inet {
                    autodiscovery-only {
                        intra-as {
                            inclusive;
                        }
                    }
                }
                family inet6 {
                    disable;
                }
            } 
        }
    }
}

2.6 CLI COMMANDS

There is no new CLI command added.

2.6.1	CLI COMMAND DETAILS

No new CLI command is introduced. Regular CLI commands can be issued on the 
backup RE to track Rosen MVPN related PIM state, MDT info, and multicast 
forwarding states on the backup RE.

2.7 JUNOSCRIPT

N/A.

2.8 J-WEB QUICK CONFIGURATION AND MONITOR SCREEN

N/A

2.9 SNMP

N/A

2.10 SYSLOG – ERRMSG

None.

2.11 SERVICEABILITY AND DIAGNOSE-ABILITY

Users can use the following CLI commands on the backup RE to check Rosen 
related info. 

    show pim join   (On both master instance and VRF instances)
    show multicast route   (On both master instance and VRF instances)
    show pim mdt    
    show pim interface
    ...

2.12 ASSUMPTIONS

None.

2.13 CONSTRAINTS AND LIMITATIONS

Rosen7 uses NGen-MVPN code to discover other PEs. Since NGen-MVPN NSR is not 
supported yet, the master RE will only mirror PIM related data, not the MVPN 
related data. After the switch over, the new master RE will build the MVPN 
data up. During the switchover, there should be no service disruption though. 

2.14 DEPENDENCIES AND INTERACTIONS WITH OTHER COMPONENTS IN THE SYSTEM

None.

2.15 EXAMPLES OR INTERACTION DESCRIPTIONS

N/A.

2.16 FREE SOFTWARE CONSIDERATIONS

N/A.

2.17 3RD PARTY SOFTWARE CONSIDERATIONS

N/A.

2.17.1 3RD PARTY SOFTWARE PACKAGE INFORMATION AND ITS FUNCTIONALITY

N/A.

2.17.2 ANTICIPATED USAGE OF 3RD PARTY CODE

N/A.

2.17.3 ANTICIPATED INTEGRATION RULES WITHIN JUNOS

N/A.

3. CAVEATS

None.

4. OTHER REQUIREMENTS

None.


5. PERFORMANCE

There is no performance degradation in NON_NSR case.

5.1 PERFORMANCE RELATED RESOURCES

N/A.

5.2 TARGET PERFORMANCE

Remain same as current implementation.


6. COMPATIBILITY ISSUES

None.

7. SECURITY ISSUES

None.

8. PLATFORMS SUPPORTED

This feature is platform independant.


9. HIGH AVAILABILITY (HA)


9.1 GRACEFUL RE SWITCHOVER (GRES) OR ISSU IMPACT

GRES is supported. GRES has to be enabled when users configure NSR.

9.2 NSR IMPACT

This feature adds NSR support for Rosen MPVN.


10. AGGREGATED ETHERNET/SONET SUPPORT

N/A.


11. SDK IMPACT

N/A.

11.1 SDK CUSTOMER USAGE

N/A.


12. SERVICES/JSF (JUNOS SERVICES FRAMEWORK) IMPACT

N/A.


13. JUNOS READY SOFTWARE CONSIDERATIONS

N/A.


14. MULTI-CHASSIS SUPPORT

RPD is not multi-chassis aware.


15. 64-BIT SUPPORT

Supported.


16. LOGICAL SYSTEM SUPPORT

NSR is not supported in logical systems.


17. NOTES

None.


18. GLOSSARY


None.


19. Design Specification exception

N/A


20. REVIEW COMMENTS



20.1 REVIEW STAKEHOLDER MATRIX

Function			Name			Required?	Approval State
---------------------------------------------------------------------------------------------------------------
SW1 (kernel, RPD, PFE etc)				Yes/No/Optional	Approved/Rejected/Approved with actions
SW2 (kernel, RPD, PFE etc)				Yes/No/Optional	Approved/Rejected/Approved with actions
SW3 (kernel, RPD, PFE etc)				Yes/No/Optional	Approved/Rejected/Approved with actions
SW Manager						Yes/No/Optional	Approved/Rejected/Approved with actions
JAB							Yes/No/Optional	Approved/Rejected/Approved with actions
Systest							Yes/No/Optional	Approved/Rejected/Approved with actions
Tech-pubs						Yes/No/Optional	Approved/Rejected/Approved with actions
JTAC							Yes/No/Optional	Approved/Rejected/Approved with actions
HW							Yes/No/Optional	Approved/Rejected/Approved with actions
---------------------------------------------------------------------------------------------------------------




© Copyright 2010 Juniper Networks, Inc. -- Proprietary and Confidential – 
Do not distribute outside of the company without the permission of Juniper Networks engineering
Printed copies are for reference only!
