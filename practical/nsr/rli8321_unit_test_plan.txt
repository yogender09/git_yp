Process Template J3.02.P05.T04S

Copyright (C) 2012, Juniper Networks, Inc.
Template Owner(s):  Owner(s) of Software Development Process J3.02.P05
Template Version 1.15

NOTICE: This document contains the proprietary and confidential
information of Juniper Networks, Inc., and must not be
distributed outside of the company without the
permission of Juniper Engineering.


TEMPLATE REVISION HISTORY AND GUIDELINES

1.1 12/01/2012 tdeng Initial draft
1.2 12/02/2012 tdeng Removed ISSU work from this RLI.
1.3 Addressed Tim and Madhan's comments.
1.4 Fixed typos.

1.  INTRODUCTION

This document is the unit test plan for RLI 8321  - Logical system NSR
support. This RLI makes nonstop-routing feature available for logical systems. 
After this RLI, all protocols that already support NSR in the default rpd 
should be able to support NSR in logical systems in a similar way.

The code tracking PR is 727638.

The functional spec is http://cvs.juniper.net/cgi-bin/viewcvs.cgi/sw-projects/os/nsr/lr_nsr_issu_rli8321_func_spec?view=markup

The design spec is http://cvs.juniper.net/cgi-bin/viewcvs.cgi/sw-projects/os/nsr/lr_nsr_issu_rli8321_design_spec.txt?view=markup


2.  SCOPE

       a. Functional coverage

      This UTP shall test the infrastructure implementation of Lsys NSR. When 
"nonstop-routing" is enabled in a logical system, it should behave just
like "nonstop-routing" is enabled in the default rpd. In other words, a 
standby lsys rpd should be spawned in the backup RE. It shall establish
replication channels with the active lsys when needed by the configured
protocols. Control state shall be constantly replicated/synchronized/mirrored
from the active lsys to the standby lsys, such that, if an RE switchover takes
place, protocol NSR should have the same behavior in both lsys and default rpd's. 
Every lsys is given individual control over whether it wants to turn on NSR 
or not.

      In this UTP, four protocols were specifically selected: BGP, LDP, OSPF/ISIS,
because they represent the three groups of protocols that use different
replication channels. 
      - Group 1: rsync only (BGP)
      - Group 2: rsync and libmirror (LDP)
      - Group 3: libmirror only (OSPF/ISIS)

Other NSR supported protocols should just fall in the above three groups. The
assumption here is that, as long as the replication infrastructure is made 
available to protocols in an lsys, protocols should just behave the same 
for their NSR support as in the default rpd. Hence, this UTP does not aim to
have an exhaustive coverage over all protocols. Rather, it picks these four
protocols to represent all possible combinations of the replication
infrastructure.

       b. Software change description

b.1 < LRMUXD >

b.1.1 Lrmuxd libjtask conversion 

      The infrastructure of lrmuxd has been migrated from the fairly
 generic eventlib to the more advanced libjtask library. All existing 
 functionalities of lrmuxd should remain the same from the perception of the
 user. These mainly include: 
    - Responding to cli command "show version" and "dynamic-reconfig" 
    - Performing config checks under "logical-systems",
    - Spawning lsys config-check processes, and
    - and delivering SIGHUPs to lsys's in a reconfig. 
    
b.1.2 Lrmuxd as librpd client

      Lrmuxd now acts as a librpd client to every lsys that has NSR enabled.
 This is true in both master and backup REs. This session is established for
 the active lsys to communicate dynamic tcp port information to the standby 
 lsys. Only with the port information can the standby lsys initiate tcp
 connections to the active lsys for protocol state replication.

b.1.3 Lrmuxd as libmirror client

      Lrmuxd now acts as a libmirror client to transport the dynamic port
 information of each NSR enabled lsys from the master RE to the backup RE. 

b.1.4 Lrmuxd tracing

      New traceoptions are added to the default rpd stanza: 
 "set routing-options lrmuxd traceoptions". Standard task flags are available
 to track task related activities inside lrmuxd. But it should be sufficient 
 to just enable flag "debug" for troubleshooting lsys NSR specific problems.

{master}[edit]
regress@pro2-a# set routing-options lrmuxd traceoptions flag ?
Possible completions:
  all                  Trace everything
  commit-synchronize   Trace commit sync events
  debug                Trace debug-level lrmuxd activities
  general              Trace general events
  normal               Trace normal events
  nsr-synchronization  Trace nonstop routing synchronization events
  parse                Trace configuration parsing
  policy               Trace policy processing
  route                Trace routing information
  state                Trace state transitions
  task                 Trace routing protocol task processing
  timer                Trace routing protocol timer processing

b.1.5 Lrmuxd debug commands

       A new cli command "show lrmuxd task <xxx>" has been implemented to
 display the task information in lrmuxd. It is similar to the "show task <xxx>"
 command for rpd.

{master}
regress@pro4-d> show lrmuxd task   
Pri Task Name                           Pro  Port So Flags
 15 Memory
 40 lsys_session_task:lr2                         11 <WriteDisable>
 40 lsys_session_task:lr1                         14 <WriteDisable>
 40 lrmuxd mirror info task
 40 LR Mgmt Task
 60 Mirror Task.128.0.0.6                   55785  7 <WriteDisable>
 70 MGMT.local                                    15 <WriteDisable>
 70 MGMT_Listen./var/run/lrmuxd_mgmt               6 <Accept WriteDisable>


{master}
regress@pro4-d> show lrmuxd task ?  
Possible completions:
  <[Enter]>            Execute this command
  <task-name>          Name of task
  io                   Show task I/O statistics
  memory               Show memory utilization of lrmuxd tasks
  replication          Stateful replication
  summary              Display summary output (default)
  |                    Pipe through a command

      Existing cli command "show mirror" is modified, such that it now supports
 argument "lrmuxd". This is for displaying libmirror related data in lrmuxd.

regress@pro4-a> show mirror ?     
Possible completions:
  lrmuxd               Show lrmuxd mirror replication information
  routing              Show routing protocols stateful replication information

{master}
regress@pro4-a> show mirror lrmuxd ?  
Possible completions:
  clients              Show registerd clients for mirroring
  peer                 Show mirror peer status information
  queue                Show mirroring queues
  statistics           Show mirroring statistics

{master}
regress@pro4-a> show mirror lrmuxd clients              
End-of-database
        Replication mode: Master <-> Standby
        Entries resynced: 0
Mirror ack
        Replication mode: Master <-- Standby
        Entries resynced: 0
LSYS Port Info
        Replication mode: Master --> Standby
        Entries resynced: 2


{master}
regress@pro4-a> show mirror routing statistics logical-system lr1 
Connection resets: 0
Database resyncs: 18
Bytes sent: 7656
Bytes received: 1792


b.2 < RPD >
 
      The following modules inside rpd are modified to implement the feature.

b.2.1  RPD server and librpd

      RPD server behaves as a relay point between protocols (bgp, ldp, mirror)
 and lrmuxd, in terms of transporting the dynamic tcp port information. New
 tlvs are defined to support this capability. 

      These activities may be tracked by enabling traceoptions 
"set logical-systems <lr> routing-options rpd-server traceoptions flag general".


b.2.2 BGP and LDP

      Both of these two protocols need rsync channels for their NSR support.
 For the case of an lsys, they follow the same pattern of behavior. The
 protocol in the active lsys needs to allocate a dynamic tcp port first, then
 sends the port value to the active lrmuxd via librpd. The port data is carried
 over to the standby lrmuxd via libmirror, and further sent to the standby lsys
 via librpd. Once the protocol in the standby lsys knows about the port value,
 it will initiate tcp connection request to the same protocol in the active
 lsys to form the rsync replication channel.

      These activities may be tracked by the following traceoptions:
"set logical-systems <lr> protocols bgp traceoptions flag nsr-synchronization (detail)". 
"set logical-systems <lr> protocols ldp traceoptions flag nsr-synchronization (detail)".


b.2.3 Task commit sync

      The synchronized commit mechanism is now ready for lsys as well, once
 NSR is enabled. The i/o files for sequence number check, ksyncd initiated
 commits, and commit check tracing, have all been made available on a per-lsys
 basis.

      Activities of the task commit sync module in an lsys can be tracked by 
"set logical-systems <lr_name> routing-options traceoptions flag commit-synchronize".

      A logical-system extension is added to the existing cli command "show task
commit-sync" and "show task commit-sync internals" to track activities in task
commit sync module within lsys's.

{master}
regress@pro4-a> show task commit-sync logical-system lr1 
 
logical-system: lr1
Commit-sync Information
    State : No commit in progress
    Phase : Commit-sync Complete

{master}
regress@pro4-a> show task commit-sync internals logical-system lr1    
Commit-sync Information
    State : No commit in progress
    Phase : Commit-sync Complete

Commit-sync Internal Information
    Other-rpd-up : true
    Flags : 0x10 Local-re-done : 0x3  Commit-sync-done : 0x3
    complete_seqno : -1   pending_seqno : 1416

Timers
    Reconfig-timer : Not running
    Standby-done-timer : Not running
    Multiple-commit-timer : Not running

Reconfig requests while previous one was incomplete
    none


b.2.4 Lsys config
      
      The following new config is made available to enable nonstop-routing in
 an lsys: "set logical-systems <lsys_name> routing-options nonstop-routing"


b.3 < Libmirror >

      Just like bgp and ldp, libmirror in the active lsys needs to allocate 
 a dynamic tcp port and send it over to the standby lsys. 

      A new logical-system extension is added to the existing "show mirror routing"
command to display lsys-specific mirror session information. For example:

{master}
regress@pro4-a> show mirror routing statistics logical-system lr1 
Connection resets: 0
Database resyncs: 18
Bytes sent: 7656
Bytes received: 1792


b.4 < DDL and ODL >

      DDL and ODL libraries have been modified to implement new configs and new cli
 commands listed below.

b.4.1 New configs

b.4.1.1. The following new config is made available to enable nonstop-routing in an 
   lsys:

   "set logical-systems <lr_name> routing-options nonstop-routing"

b.4.1.2. The following new traceoptions are added to trace lrmuxd activities 
   in establishing librpd sessions and the libmirror session.

   "set routing-options lrmuxd traceoptions"

b.4.2 New cli commands

b.4.2.1 The "logical-system" argument is added to the following cli commands.

   "show task commit-sync" and "show task commit-sync internals"
   "show task replication"
   "show mirror routing xxx"
   "show l2vpn replication label"
   "show ldp replication xxx"
   "show ospf replication xxx"
   "show ospf3 replication xxx"
   "show l2circuit replication label"
   "show bgp replication"

      The "logical-system" extension is already supported in the following cli 
 commands.

   "show mpls replication xxx"
   "show isis replication xxx"

b.4.2.2. The following new cli command is added:

   "show lrmuxd task"

b.4.2.3. The "lrmuxd" argument is added to the following cli command:

   "show mirror"

	c.	Feature intersection 

      This feature is basically an extension of the existing NSR support of the
 default rpd into the lsys domain. The existing libmirror and rsync infrastructure 
 is re-used.  

        d. Platform and HW coverage scope

      This feature can only be supported in platforms that officially supports
 NSR in the default rpd. These include:

M10i                      8.4 or later
M20                       8.4 or later
M40e                      8.4 or later
M120                      9.0 or later
M320                      8.4 or later
MX Series                 9.0 or later
T320, T640, and TX Matrix 8.4 or later
T1600                     8.5 or later
TX Plus Matrix           10.0 or later


3.  SETUP

3.1 Topology and config

      As shown in the figure below, the test setup has two routers. DUT R0 must
 have dual REs and must be able to support NSR. Two logical systems are
 configured in R0. All three rpds (default, lsys1 and lsys2) in R0 have various 
protocols configured peering with R1. 


  +------------------+                  +------------------+
  |       R0         |                  |       R1         |
  |      (DUT)       |    bgp, ldp      |                  |
  |             rpd  |------------------|                  |
  |                  |	                |                  |
  |                  |                  |                  |  
  |                  | bgp, ldp, isis   |                  |  
  |            lsys1 |------------------|                  |  
  |                  |                  |                  |  
  |                  |                  |                  |  
  |                  | bgp, ldp, ospf   |                  |  
  |            lsys2 |------------------|                  |  
  |                  |                  |                  |  
  |                  |                  |                  |  
  +------------------+                  +------------------+ 


3.2 Actual hardware

The actual routers used in the unit test are pro3-a (m10i) as R0 and
 pro3-b (m10) as R1.


4. FUNCTIONAL TEST CASES

4.1. Spawn/stop lsys and lrmuxd in active RE.
    Goal:  Spawn/stop lsys and lrmuxd in the active RE when lsys is
           configured/deconfigured.
    Test Steps:
	1. Configure logical system lsys1 with minimal config.
    Success Criteria: 
        - "ps -aux |grep lrmuxd" shows a running lrmuxd.
        - "ps -aux |grep lsys1" shows a running lsys.
    Test Steps:
        2. Deconfigure lsys1.
    Success Criteria:
        - The lsys process is terminated.
        - The lrmuxd process is terminated.
    Result:  pass.

4.2. Spawn/stop lsys and lrmuxd in backup RE
    Goal: Spawn/stop lsys and lrmuxd in the backup RE when lsys nsr is 
          configured/deconfigured.
    Test Steps:
        1. Configure lsys1 and lsys2 with minimal config.
    Success Criteria:
        None of lsys1, lsys2 and lrmuxd should be spawned in the backup RE.
    Test Steps:
        2. Configure [routing-options][nonstop-routing] under lsys1.
    Success Criteria:
        Lsys1 and lrmuxd should be spawned in the backup RE.
    Test Steps:
        3. Configure [routing-options][nonstop-routing] under lsys2.
    Success Criteria:
        Lsys2 should also be spawned in the backup RE.
    Test Steps:
        4. Deactivate nonstop-routing for lsys2
    Success Criteria:
        Lsys2 should be terminated in the backup RE.
    Test Steps:
        5. Deactivate nonstop-routing for lsys1
    Success Criteria:
        Lsys1 and lrmuxd should both be terminated in the backup RE.
    Result: pass.
 
4.3. Lrmuxd SIGHUP delivery
    Goal: Deliver reconfig sighups to the selected lsys in both active and
          backup REs.
    Test Steps:
        1. Configure nonstop-routing in both lsys1 and lsys2.
        2. Configure BGP and LDP in both logical systems.
        3. Modify an interface description under lsys1.
        4. Issue "show interface" in both REs.
    Success Criteria:
        - Output should have the new interface description in both REs.
    Test Steps:
        5. Deactivate protocol BGP under lsys2.
        6. Issue "show task replication logical-system lsys2" in both REs.
    Success Criteria:
        - Output should no longer show BGP in both REs.
    Result: pass.

4.4. Lrmuxd response to "show version detail"
    Goal: Display the correct version for lrmuxd in both active and backup REs.
    Test Steps:
        1. Issue "show version detail" from cli in the active RE.
        2. Issue "show version detail" from cli in the backup RE.
    Success Criteria
        Both should display the current version of lrmuxd in the output.

4.5. Lrmuxd tracing 
    Goal: Proper debug-level tracing of lsys nsr related activities in both 
          active and backup RE.
    Test Steps:
        1. Configure "set routing-options lrmuxd traceoptions flag debug", and
                     "set routing-options lrmuxd traceoptions file lrmuxd".
        2. Deconfigure nonstop-routing from lsys1.
    Success Criteria:
        -  Active RE should show activities in the trace file /var/log/lrmuxd.
        -  Backup RE may not show activities in /var/log/lrmuxd when lrmuxd is
           terminated by the deconfiguration, if lsys1 is the only lsys in the
           config.
    Test Steps:
        3. Reconfigure nonstop-routing for lsys1.
    Success Criteria:
        -  Trace file /var/log/lrmuxd should show NSR related activities inside
           lrmuxd in both REs.
        -  Trace file should show libmirror related activities inside lrmuxd as
           well.
    Test Steps:
        4. Deactivate the above configured traceoptions.
        5. Deconfigure/Reconfigure nonstop-routing from lsys1.
    Success Criteria:
        Trace file /var/log/lrmuxd should no longer shows activities.
    Test Steps:
        6. Reactivate the above traceoptions config.     
        7. Deconfigure/Reconfigure nonstop-routing from lsys1.
    Success Criteria:
        Trace file /var/log/lrmuxd should once again show NSR related
        activities in both REs.
    Result: pass.

4.6. Lrmuxd as librpd and libmirror client
    Goal: 
        1. Proper communication with lsys in both active and back REs.
        2. Proper communication between active lrmuxd and backup lrmuxd.
    Test Steps:
        1. Configure "set routing-options lrmuxd traceoptions flag debug", and
                     "set routing-options lrmuxd traceoptions file lrmuxd".
        2. Configure lsys1 with BGP, LDP, ISIS and nonstop-routing.
    Success Criteria: All observations below should be made from the trace file
                      /var/log/lrmuxd.
        Active RE:
        ==========
        -  Should see lrmuxd_lsys_session_entry added for lsys1.
        -  Should see lrmuxd_lsys_info_entry added for lsys1.
        -  Should see lrmuxd successfully establish librpd session with lsys1.
        -  Should see lrmuxd send requests for bgp rsync port, ldp rsync port, 
           and mirror port to lsys1.
        -  Should see lrmuxd receive bgp rsync port, ldp rsync port and mirror
           port from lsys1 via librpd.
        -  Should see mirror channel to the backup lrmuxd is established.
        -  Should see lrmuxd assemble the mirror tlv for the three ports.
        -  Should see success in queuing the mirror operation.

        Backup RE:
        ==========
        -  Should see lrmuxd_lsys_session_entry added for lsys1.
        -  Should see lrmuxd_lsys_info_entry added for lsys1.
        -  Should see lrmuxd successfully establish librpd session with lsys1.
        -  Should see the mirror channel to the active lrmuxd is established.
        -  Should see lrmuxd receive the mirror tlv containing bgp rsync port, 
           ldp rsyc port, and mirror port.
        -  Should see lrmuxd send bgp rsync port, ldp rsync port, and mirror
           port to lsys1 via librpd.

    Test Steps:
        3. Issue "netstat -t |grep tcp4" from both REs.
    Success Criteria:
        -  Should see the three ports recorded in the trace file appear in the
           output in ESTABLISHED state. 
    Test Steps:
        4. Issue "show lrmuxd task" in both REs.
    Success Criteria:
        -  Should see lsys_session_task:lsys1 task in the output.
        -  Should see lrmuxd lsys info task in the output.
        -  Should see Mirror Task and/or Mirror Listen task in the output.
    Test Steps:
        5. Issue "show mirror lrmuxd peer" in both REs.
    Success Criteria:
        Should see "Connection status: Connected" in the output.
    Test Steps: 
        6. Issue "show task replication logical system lsys1" in the active RE.
    Success Criteria:
        Should see "Complete" status for all three protocols in the output.
    Test Steps:
        7. Deactivate nonstop-routing from lsys1.
    Success Criteria: all observations below should be made from the trace file
                      /var/log/lrmuxd.
        Active RE:
        ==========
        -  Should see lrmuxd_lsys_session_entry deleted for lsys1.
        -  Should see lrmuxd_lsys_info_entry deleted, unlocked, and freed for lsys1.
        -  Should see lrmuxd_lsys_info_task stopped.

        Backup RE:
        ==========
        -  Should see lrmuxd terminated.
    Test Steps:
        8. Issue "show lrmuxd task" in the active RE.
    Success Criteria:
        -  Should not see lrmuxd lsys info task in the output.
        -  Should not see lsys_session_task:lsys1 task in the output.
        -  Should see Mirror Listen Task in the output.
    Result: pass.

4.7. Lrmuxd in RE switchover
    Goal: Lrmuxd executes the switchover functions properly.
    Test Steps: 
        1. Enable traceoptions 
            "set routing-options lrmuxd traceoptions file lrmuxd".
            "set routing-options lrmuxd traceoptions flag debug".
        2. Configure BGP, LDP, ISIS and nonstop-routing in lsys1.
        3. Wait till "show task replication logical-system lsys1" output in the
           active RE shows all three protocols in Complete state. 
        4. Issue "request chassis routing-engine master switch" from the
           active RE.
        5. Issue "show task replication logical-system lsys1" in the new active
           RE.
    Success Criteria:
        - Should soon see all protocols stabilized to "Complete" state in the
          output.
        
        New active RE:
        ==============
        In the /var/log/lrmuxd trace file,
            - Should see that the new active lrmuxd sends librpd requests to 
              the new active lsys1 for bgp rsync port, ldp rsync port, and 
              mirror port. 
            - Should see that the new active lrmuxd receives the port values
              from the new active lsys1 via librpd.
            - Should see mirror connection re-established.
            - Should see mirror tlvs assembled and successfully queued to carry
              the port information.
    
        New backup RE:
        ==============
         In the /var/log/lrmuxd trace file,
            - Should see the old active lrmuxd terminated and the new backup
              lrmuxd boot up.
            - Should see a mirror connection initiated from the new backup
              lrmuxd.
            - Should see tcp ports arrive in mirror tlvs.
            - Should see tcp ports sent to the new backup lsys1 via librpd.
    Result: pass.

4.8. Libmirror channel in lsys
    Goal: Establish libmirror channel between active lsys and backup lsys.
    Test Steps:
        1. Configure ISIS and nonstop-routing in lsys1.
        2. Issue "show mirror routing peer logical-system lsys1" in both REs.
    Success Criteria:
         Connection status should show "Connected" in the output.
    Result: pass.
    
4.9. BGP rsync channel in lsys
    Goal: Establish bgp rsync channel between active lsys and backup lsys.
    Test Steps:
        1. Enable traceoptions
            "set logical-systems lsys1 protocols bgp traceoptions file rt".
            "set logical-systems lsys1 protocols bgp traceoptions flag nsr-synchronization".
        2. Configure BGP and nonstop-routing in lsys1.
    Success Criteria: In /var/log/lsys1/rt trace file, the following
                      observations should be made:
        Active RE:
        ==========
        - Should see the bgp rsync port dynamically allocated.
        - Should see the bgp rsync listen task accept an incoming connection
          from the backup lsys.
        - Should see rt_phase changed to Complete. 

        Backup RE:
        ==========
        - Should see bgp standby connected to master.
     
    Test Steps:
        3. Issue "show bgp replication logical-system lsys1" from both active
           and backup REs.
    Success Criteria:
        - Session state should be "Up" in active RE.
        - State should be "Established" in the backup RE.
    Test Steps:
        4. Issue "show task replication logical-system lsys1" from the active RE.
    Success Criteria:
        Should see "Complete" state for BGP in the output.
    Test Steps:
        5. Issue "show task logical system lsys1" from the active RE.
    Success Criteria:
        Should see BGP Rsync Listen task in the output.
    Test Steps:
        6. Deactivate bgp protocol from lsys1 config.
        7. Issue "show task logical system lsys1" from the active RE.
    Success Criteria:
        Should see BGP Rsync Listen task disappear from the output.
    Result: pass.

4.10. LDP rsync channel in lsys
    Goal: Establish ldp rsync channel between active lsys and backup lsys.
    Test Steps:
        1. Enable traceoptions 
            "set logical-systems lsys1 protocols ldp traceoptions file rt".
            "set logical-systems lsys1 protocols ldp traceoptions flag nsr-synchronization detail"
        2. Configure LDP and nonstop-routing in lsys1.
    Success Criteria: In /var/log/lsys1/rt trace file, the following observations should 
                      be made:
        Active RE:
        ==========
        -  An ldp rsync port is dynamically allocated.
        -  The ldp rsync listen task accepts an incoming connection from the
           backup lsys.
        -  Should see "LDP NSR sync complete".
    
        Backup RE:
        =========
        -  Should see ldp session connect complete.
    Test Steps:
        3. Issue "show task replication logical-system lsys1" from active RE.
    Success Criteria: 
        Should see "Complete" state for LDP.
    Test Steps:
        4. Issue "show ldp replication statistics/path/neighbor logical-system lsys1"
           from both active and backup REs.
    Success Criteria:
        Should see meaningful output. 
    Test Steps:
        5. Issue "show task logical system lsys1" from the active RE.
    Success Criteria:
        Should see LDP Rsync Listen task in the output.
    Test Steps:
        6. Deactivate ldp protocol from lsys1 config.
        7. Issue "show task logical system lsys1" from the active RE.
    Success Criteria:
        Should see LDP Rsync Listen task disappear from the output.
    Result: pass.

4.11. RPD server in lsys
    Goal: RPD server acts as the relay between lsys protocols and lrmuxd for
          dynamic nsr port information.
    Test Steps:
        1. Enable traceoptions 
            "Set logical-system lsys1 routing-options rpd-server traceoptions file rt"
            "Set logical-system lsys1 routing-options rpd-server traceoptions flag general"
        2. Configure BGP, LDP, ISIS and nonstop-routing in lsys1.
    Success Criteria: The following observations should be made from trace file
                      /var/log/lsys1/rt
        Active RE:
        ==========
        -  Should see that rpd server receives requests from the active lrmuxd for bgp
           rsync port, ldp rsync port, and mirror port.
        -  Should see that rpd server sends bgp rsync port, ldp rsync port and
           mirror port to the active lrmuxd.

        Backup RE:
        ==========
        -  Should see that rpd server receives bgp rsync port, ldp rsync port
           and mirror port from the backup lrmuxd.
    Result: pass.

4.12. Synchronized commit in lsys
    Goal: Lsys should be able to perform synchronized commit when bgp NSR is
          configured.
    Test Steps:
        1. Enable traceoptions
            "set logical-systems lsys1 routing-options traceoptions file rt"
            "set logical-systems lsys1 routing-options traceoptions flag commit-synchronize"
        2. Configure bgp and nonstop-routing in lsys1.
    Success Criteria:
        - In /var/log/lsys1/rt trace file, should see synchronized commit state 
          machine proceed to complete state in both REs.
        - In /var/run, should see a sequence number file __rpd_commit_sync__lsys1 in both REs.
        - In /var/run, should see a skip config sync file
          __rpd_no_config_sync__lsys1 in both REs.
    Result: pass.

4.13. Combination of protocols in RE switchover 
    Goal: Protocols should restore the replication state within 1 min after RE
          switchover, in a non-loaded box. This delay is consistent with that
          in default rpd.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        3. Issue "request chassis routing-engine master switch" from the active
           RE.
        4. Issue "show task replication logical-system all" from the new active
           RE.
    Success Criteria:
        - Should see "Complete" state for all protocols in all rpds within 
          1 minute after switchover. For default rpd, BGP and LDP's 
          standby msync connect functions have a linger state delay of 30s 
          during a switchover. This delay is inherited by the lsys case.
    Test Steps:
        5. Issue "show mirror routing peer logical-system all" in both REs.
    Success Criteria:
        - Should see Connection status in "Connected" state for all rpds.
    Result: pass.

4.14. Activate/deactivate lsys configured without NSR.
    Goal: Proper cleanup when lsys is deconfigured.
    Test Steps:
        1. Configure a mixture of protocols without NSR in the default rpd, 
           lsys1 and lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Deconfigure both lsys's.
        3. In shell, issue "ps -aux |grep rpd" in active RE.
    Success Criteria:
        -  Both deconfigured lsys's should be terminated in active RE.
    Test Steps:
        4. Reconfigure the two lsys's.
    Success Criteria:
        -  Should see both lsys's spawned and protocol state stabilized.
    Test Steps:
        5. Deconfigure both lsys's again.
        6. In shell, issue "ps -aux |grep rpd" in active RE.
    Success Criteria:
        -  Both deconfigured lsys's should be terminated in active RE.
    Result: pass.

4.14. Activate/deactivate lsys configured with NSR.
    Goal: Proper cleanup when NSR-enabled lsys is deconfigured.
    Test Steps:
        1. Configure a mixture of protocols without NSR in the default rpd, 
           lsys1 and lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2.
        2. Configure nonstop-routing. Wait till all protocols in the output of
           "show task replication logical-system all" are in Complete state in
           active RE.
        3. Deconfigure both lsys's.
        4. In shell, issue "ps -aux |grep rpd" in both REs.
    Success Criteria:
        -  Both deconfigured lsys's should be terminated in both REs.
    Test Steps:
        5. Reconfigure the two lsys's with NSR.
        6. Issue "show task replication logical-system all" from active RE.
    Success Criteria:
        -  Should see all protocols in both lsys's at "Complete" state in the output.
    Test Steps:
        7. Deconfigure both lsys's again.
        8. In shell, issue "ps -aux |grep rpd" in both REs.
    Success Criteria:
        -  Both deconfigured lsys's should be terminated in both REs.
    Result: pass.

4.15. Route replication in a mixture of protocols.
    Goal: Routes should be replicated to the backup lsys.
    Test Steps:
        1. Configure a mixture of protocols without NSR in the default rpd, 
           lsys1 and lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2.
        2. Configure nonstop-routing. Wait till all protocols in the output of
           "show task replication logical-system all" are in Complete state in
           active RE.
        3. From R1, inject routes to the DUT (R0) into default rpd and the
           two lsys's via all protocols, such that, each rpd (lsys or non-lsys)
           has some BGP routes, some LDP routes, some ISIS or OSPF routes.
        4. Issue "show route", 
                 "show route logical-system lsys1", and 
                 "show route logical-system lsys2". 
    Success Criteria: 
           All protocol routes should be replicated from the active lsys to the
           backup lsys in the same way as they are replicated from the active 
           default rpd to the backup default rpd.
    Test Steps:
        5. Enable krt tracing in all rpds (lsys and non-lsys) via 
            "set routing-options forwarding-table traceoptions file rt", and
            "set routing-options forwarding-table traceoptions flag route/asynchronous/synchronous". 
        6. Perform the RE switchover by issuing 
           "request chassis routing-engine master switchover", and
           monitor BGP neighbor, ldp neighbor, isis adjacency, and ospf neighbor 
           during switchover via tracing and cli commands.
    Success Criteria:
        -  Should not see protocol adjacency/session flaps during the switchover.
        -  Should not see route withdrawal/re-addition in the new active RE in
           krt trace file, during the switchover.
    Result:
        Fail. There are some problems in bgp route replication due to the
        unavailability of the kernel id. Will investigate and come up with a fix.
        
        
5.  BOUNDARY TEST CASES

5.1 Active lrmuxd restart
    Goal: No replication session should be impacted during the restart.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Enable lrmuxd tracing with flag "debug" using /var/log/lrmuxd file. 
           Also enable rpd-server tracing with flag "general" using
           /var/log/lsys1/rt file.
        3. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        4. Go to shell, and issue "kill -9 <lrmuxd_pid>" in the active RE.
        5. Issue "show task replication logical-system all" immediately.
    Success Criteria:
        -  Should not see tcp session interruptions throughout the process. All 
           protocols should stay in the "Complete" state without interruptions.
        -  The following observations should be made in the /var/log/lrmuxd 
           trace file.
        
        Active RE:
        ==========
             - Lrmuxd restarts and creates new session entries and new info
               entries for both lsys1 and lsys2.
             - Lrmuxd establishes librpd sessions with both lsys1 and lsys2.
             - Lrmuxd receives the same set of bgp rsync port and ldp rsync ports.
             - Lrmuxd should not receive mirror port.
             - Lrmuxd assembles mirror tlvs to transport the received bgp rsync
               port and ldp rsync port.

        Backup RE:
        ==========
             - Lrmuxd should see mirror channel reset due to the active 
               lrmuxd restart.
             - Lrmuxd should see all port data reset due to the mirror reset.
             - Lrmuxd should see reconnect the mirror channel.
             - Lrmuxd should receive mirror tlvs that contain bgp rsync port 
               and ldp rsync port from the active lrmuxd.
             - Lrmuxd should send the received port information to lsys1 and 
               lsys2 via librpd.

        -  The following observations should be made in the /var/log/lsys1/rt
           trace file.
        
        Active RE:
        =========
             - lsys1 rpd server should receive requests from lrmuxd for all
               three ports.
             - lsys1 rpd server should send bgp rsync port and ldp rsync port
               to lrmuxd via librpd. (Mirror port is not sent because the
               the mirror listen task is deleted once connection is established.)

        Backup RE:
        ==========
             - lsys1 rpd server should receive the same bgp rsync port and ldp
               rsync port as what it's already storing. No session
               interruptions are resulted.
    Result: pass. 

5.2 Backup lrmuxd restart
    Goal: No replication session should be impacted during the restart.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Enable lrmuxd tracing with flag "debug" using /var/log/lrmuxd file. 
           Also enable rpd-server tracing with flag "general" using
           /var/log/lsys1/rt file.
        3. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        4. Go to shell, and issue "kill -9 <lrmuxd_pid>" in the backup RE.
        5. Issue "show task replication logical-system all" immediately from
           the active RE.
    Success Criteria:
        -  Should not see tcp session interruptions throughout the process. All 
           protocols should stay in the "Complete" state without interruptions.
        -  The following observations should be made in the /var/log/lrmuxd 
           trace file.
        
        Active RE:
        ==========
             - Should see mirror channel reset due to peer restart.
             - Should see lrmuxd assemble and queue mirror tlvs that contain  
               bgp rsync port and ldp rsync port for each lsys. Mirror port is
               not sent.

        Backup RE:
             - Lrmuxd restarts and creates new session entries and new info
               entries for both lsys1 and lsys2.
             - Lrmuxd establishes librpd sessions with both lsys1 and lsys2.
             - Lrmuxd should see reconnection of the mirror channel.
             - Lrmuxd should receive mirror tlvs that contain bgp rsync port 
               and ldp rsync port from the active lrmuxd.
             - Lrmuxd should send the received port information to lsys1 and 
               lsys2 via librpd.

        -  The following observations should be made in the /var/log/lsys1/rt
           trace file.
        
        Active RE:
        =========
             - No activity should be observed from the rpd server side in lsys1.

        Backup RE:
        ==========
             - lsys1 rpd server should receive the same bgp rsync port and ldp
               rsync port as what it's already storing. No session
               interruptions are resulted.
    Result: pass. 

5.3 Active lsys restart
    Goal: Replication sessions should be restored in about 10s after the
          restart, in a non-loaded box.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Enable lrmuxd tracing with flag "debug" using /var/log/lrmuxd file. 
           Also enable rpd-server tracing with flag "general", bgp rsync
           tracing with flag "nsr-synchronization" and ldp rsync tracing with flag
           "nsr-synchronization" using /var/log/lsys1/rt file.
        3. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        4. Go to shell, and issue "kill -9 <lsys1_pid>" in the active RE.
        5. Issue "show task replication logical-system all" immediately from
           the active RE.
    Success Criteria:
        -  Should see brief tcp session interruptions for all protocols in
           lsys1 upon active lsys1 restart. 
        -  Should see lsys1 replication state quickly proceed to "Complete" state
           for all protocols. 
        -  The following observations should be made in the /var/log/lrmuxd 
           trace file.
        
        Active RE:
        ==========
             - Should see librpd session down to lsys1 due to lsys1 restart.
             - Should see reconnect timer scheduled to attempt connection every
               5s.
             - Should see librpd session re-established.
             - Should see lrmuxd send librpd requests for all three ports to lsys1.
             - Should see lrmuxd receive values of all three ports from lsys1
               via librpd.
             - Should see lrmuxd assemble and queue mirror tlvs for
               transporting the three port values.

        Backup RE:
        ==========
             - Should see lrmuxd receive mirror tlvs that contain new values for 
               bgp rsync port, ldp rsync port, and mirror port.
             - Should see lrmuxd send the received port information to lsys1 
               via librpd.

        -  The following observations should be made in the /var/log/lsys1/rt
           trace file.

        Active RE:
        ==========
             - Should see lsys1 restarted.
             - Should see rpd server for lsys1 receives librpd requests for
               three ports from lrmuxd.
             - Should see rpd server send the three port values to lrmuxd via
               librpd.
             - Should see bgp rsync channel established.
             - Should see ldp rsync channel established.
    
        Backup RE:
             - Should see rpd server receive three port values from lrmuxd via
               librpd.
             - Should see bgp and ldp rsync modules initiate connections on the
               received ports.
    Result: pass. 

5.4 Backup lsys restart
    Goal: Replication sessions should be restored in about 10s after the
          restart, in a non-loaded box.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Enable lrmuxd tracing with flag "debug" using /var/log/lrmuxd file. 
           Also enable rpd-server tracing with flag "general", bgp rsync
           tracing with flag "nsr-synchronization" and ldp rsync tracing with flag
           "nsr-synchronization" using /var/log/lsys1/rt file.
        3. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        4. Go to shell, and issue "kill -9 <lsys1_pid>" in the backup RE.
        5. Issue "show task replication logical-system all" immediately from
           the active RE.
    Success Criteria:
        -  Should see brief tcp session interruptions for all protocols in
           lsys1 upon backup lsys1 restart. 
        -  Should see lsys1 replication state quickly proceed to "Complete" state
           for all protocols. 
        -  The following observations should be made in the /var/log/lrmuxd 
           trace file.
        
        Active RE:
        ==========
             - Should see lrmuxd receives a new mirror port. 
             - Should see lrmuxd assemble and queue mirror tlvs for
               transporting the port information.

        Backup RE:
        ==========
             - Should see lrmuxd's librpd session down with lsys1.
             - Should receive the new mirror port for lsys1 from lrmuxd.
             - Should send all three ports to restarted lsys1 via librpd. 

        -  The following observations should be made in the /var/log/lsys1/rt
           trace file.

        Active RE:
        ==========
             - Should see rpd server send a new mirror port to lrmuxd.
             - Should see bgp rsync channel established.
             - Should see ldp rsync channel established.
        
        Backup RE:
        ==========
             - Should see lsys1 restarted.
             - Should see rpd server in lsys1 receive mirror port, bgp rsync
               port, and ldp rsync port.
             - Should see bgp and ldp rsync modules initiate connections on the
               received ports.
    Result: pass.

5.5. Restart both lsys's simultaneously in the active RE
    Goal: Replication sessions should be restored in about 10s after the
          restart, in a non-loaded box.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        3. In the active RE, go to shell, and issue 
            "kill -9 <lsys1_pid> ; kill -9 <lsys2_pid>".
        4. Issue "show task replication logical-system all" immediately from
           the active RE.
    Success Criteria:
        -  Should see brief tcp replication interruptions for all protocols in both
           lsys's upon their restart. 
        -  Should see replication state quickly proceed to "Complete" state
           for all protocols in both lsys's. 
    Result: pass.

5.6. Restart lrmuxd in both REs simultaneously
    Goal: Replication sessions should not be impacted.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        3. In both REs, go to shell, and issue "kill -9 <lrmuxd_pid>" simultaneously.
        4. Issue "show task replication logical-system all" immediately from
           the active RE.
    Success Criteria:
        -  Should not see tcp replication interruptions throughout the process. All 
           protocols should stay in the "Complete" state without interruptions.
    Result: pass.

5.7. Restart two lsys's simultaneously in both REs
    Goal: Replication sessions should be restored in about 10s after the restart, 
          in a non-loaded box.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        3. In both REs, go to shell, and simultaneously issue 
            "kill -9 <lsys1_pid> ; kill -9 <lsys2_pid>".
        4. Issue "show task replication logical-system all" immediately from
           the active RE.
    Success Criteria:
        -  Should see brief tcp session interruptions for all protocols in both
           lsys's upon their restart. 
        -  Should see replication state quickly proceed to "Complete" state
           for all protocols in both lsys's. 
    Result: pass.

5.8. Restart lrmuxd and the two lsys's in both REs
    Goal: Replication sessions should be restored in about 10s after the restart,
          in a non-loaded box.
    Test Steps:
        1. Configure a mixture of protocols in the default rpd, lsys1 and
           lsys2. For example: 
                BGP and LDP in default rpd.
                BGP, LDP, and ISIS in lsys1.
                BGP, LDP, and OSPF in lsys2. 
        2. Issue "show task replication logical-system all" from the active
           RE. Wait till all protocols in all rpds show "Complete" status.
        3. In both REs, go to shell, and simultaneously issue 
            "kill -9 <lrmuxd_pid> ; kill -9 <lsys1_pid> ; kill -9 <lsys2_pid>".
        4. Issue "show task replication logical-system all" immediately from
           the active RE.
    Success Criteria:
        -  Should see brief tcp session interruptions for all protocols in both
           lsys's upon the restart. 
        -  Should see replication state quickly proceed to "Complete" state
           for all protocols in both lsys's. 
    Result: pass.

6.  GRES TEST CASES

Covered in test case 4.12.

7.  ISSU TEST CASES

Note supported.

8. TX TEST CASES

TX is a supported platform. No unit test has been performed on a TX platform.
This feature should be platform independent.

9.  AGGREGATED ETHERNET/SONET TEST CASES
 
No unit test has been done on aggregated interfaces. This feature should be
interface independent.
 
10.  REGRESSION TEST CASES

AS-ROD is underway.
http://systest.juniper.net/cgi-bin/gnats_misc/gnats?database=systest&cmd=view+audit-trail&pr=1076309


11.  INTEROPERABILITY TEST CASES

Not applicable.

12.  MIGRATION & COMPATIBILITY TEST CASES

Not applicable.

13.  TEST COVERAGE REMAINING

No.

14.  DEFECTS REMAINING

Failure in Test case 4.15 remains to be fixed.

15. SCALING AND PERFORMANCE
 
Not applicable.

16. STATIC ANALYSIS 

Ongoing.

17. CODE COVERAGE

Attempted to use the ccc tool for code coverage collection, but the data was far
from convincing. Was advised not to continue.

18. AUTOMATION

None of the testcases was automated. Only automated the initial config part,
which is not worth checking in.


19. UNIT TEST PLAN REVIEW FEEDBACK

Tim's comments are listed below. These were all addressed in revision 1.3 of
this document.

----------
I'd reword this statement:

'if an RE switchover takes place, the standby lsys can perform a 
seamless takeover, and no traffic drop should be experienced.'

A better way to state the requirement is that for each protocol, NSR 
should have the same behavior in both LSYS and default RPD's. If you say 
'no traffic drop', then even if there is traffic drop in the default 
RPD, your test fails.

'we spefically picked' --> 'we specifically picked'

4.3.2 'Modify a random config under lsys2.' --> 'Modify an interface 
description'
The pass criterion is then 'show interface' shows the new description.

4.6 It would also be good to verify ports and tcp sessions with netstat 
to ensure that the show commands are behaving correctly.

5.* When killing processes, say 'kill -9'.

Some more good test cases would be to kill both lrmuxd's at the same 
time, both lsys at the same time, and then all four procs at once.

Do you have a test case for 'repeatedly (de)activate lsys2 both with and 
without NSR'? I.e., start with an lsys with a bunch of state and then 
completely tear it down and bring it back up. The idea is to make sure 
we get all of our state out of the kernel and don't hang on shutdown or 
restart. Testcase name would be activate/deactivate NSR lsys configured 
with all supported protocols.

I think you need a test case that verifies tcp sessions don't drop on 
switchover. So on your R1, inject a bunch of routes into BGP (maybe 
using rtgen and an export policy), do the NSR switch and verify (1) TCP 
session stays up and (2) routes don't get withdrawn. Similarly for ldp. 
Bonus points for verifying no traffic loss (but you might be able to 
leave that to systest). Similarly for ospf/isis adjacencies.

tjl
--------

