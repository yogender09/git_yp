$Id: ldp_nsr_phase_2_funcspec.txt,v 1.1 2007/03/13 01:29:52 shivania Exp $


	    Functional spec for LDP support of NSR - Phase 2
	    ================================================

	   Functional specification and implementation details

		Shivani Aggarwal (shivania@juniper.net)


Copyright (C) 2006-2007, Juniper Networks, Inc.

NOTICE: This document contains proprietary and confidential
information of Juniper Networks, Inc. and must not be distributed
outside of the company without the permission of Juniper Networks
engineering.

DO NOT document the implementation details or share them with the
customer.

In this document, the terms "primary" and "master" are used
interchangeably to mean the current active rpd. The terms "secondary" and
"standby" are used interchangeably to mean the rpd that will take over
after the master crashes. 


1.  INTRODUCTION
=================

   This feature is part of the NSR project. The LDP functionality for NSR 
is tracked under RLI 3168 tracking pr 65909. This is the phase 2 of this
effort and is tracked under 8.2 RLI 2721, PR 73179.

   This document assumes familiarity with the concepts in the NSR base
spec [BASE_SPEC]. Before reading this document, it is recommended to read
[LDP_NSR_IMPL].

   This RLI attempts to cover all pending LDP NSR issues not implemented in
Phase 1.

2.  FUNCTIONALITY
==================

The following enhancements will be covered by this RLI:
1. Hello updates will be processed on the standby.
2. In Phase 1, we send out a label map for each ACTIVE outlib binding
   on all sessions after switchover. The enhancement will be to send a
   map message for bindings only if absolutely necessary. This should prevent
   unnecessary control traffic on the sessions after switchover.
3. PPMD is preprogrammed with interfaces and hello packets. However, PPMD
   work is needed for NSR so that transmit is enabled when switchover happens.
   LDP is reprogramming PPMD with all interfaces on switchover as a brute-force
   workaround.


CLI changes:

"show ldp session detail/extensive" have been extended to add a new field

shivania@pro6-f> show ldp session detail                  
Address: 10.255.168.66, State: Operational, Connection: Open, Hold time: 27
  Session ID: 10.255.168.59:0--10.255.168.66:0
  Next keepalive in 1 seconds
  Passive, Maximum PDU: 4096, Hold time: 30, Neighbor count: 2
  Keepalive interval: 10, Connect retry interval: 1
  Local address: 10.255.168.59, Remote address: 10.255.168.66
  Up for 06:45:25
  Local - Restart: disabled, Helper mode: enabled
  Remote - Restart: disabled, Helper mode: enabled
  Local maximum recovery time: 240000 msec
  Nonstop routing state: In sync                        <==== added 
  Next-hop addresses received:
    so-1/0/2.0
    so-1/0/0.0
    10.255.168.66



3.  CAVEATS
===========



4.  OTHER REQUIREMENTS
=======================

N/A

5.  IMPLEMENTATION DETAILS
===========================



6.  PERFORMANCE
===============


7.  COMPATIBILITY ISSUES
==========================

N/A

8.  SECURITY ISSUES
====================

N/A

9.  Graceful RE Switchover (GRES), Hobson Impact
================================================

N/A

10.  NOTES
===========

N/A

11.  GLOSSARY
==============

N/A


12.  REVIEW COMMENTS
====================

     See discussions on the ldp-coders and rpd-nsr-coders mailing
lists. Also see the cvs log of this document. 

13, REFERENCES
===============

[BASE_SPEC] - Non-Stop Routing (NSR) - Functional specification
sw-projects/os/nsr/software_spec.txt

[LDP_DESIGN] - Design of LDP Synchronization for NSR
sw-projects/os/nsr/ldp-design.txt

[SOCK_API] - Juniper socket replication API, 
sw-projects/os/nsr/kernel/socket_replication_api.txt

[LDP_NSR_IMPL] - Implementation and Design details for LDP support of NSR
sw-projects/os/nsr/ldp-nsr-implementation.txt

[LDP_NSR_FUNCSPEC] - Functional spec for LDP support of NSR
sw-projects/os/nsr/ldp_software_spec.txt
