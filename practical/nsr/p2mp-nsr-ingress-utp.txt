$Header: /cvs/juniper/sw-projects/os/nsr/p2mp-nsr-ingress-utp.txt,v 1.1 2011/06/24 20:12:49 mjork Exp $

Process Template J3.02.P05.T04S


	       NSR for RSVP P2MP Ingress Unit Test Plan

		   Markus Jork <mjork@juniper.net>


Copyright (C) 2011, Juniper Networks, Inc.
Template Owner(s):  Owner(s) of Software Development Process J3.02.P05
Template Version 1.15

NOTICE: This document contains the proprietary and confidential
information of Juniper Networks, Inc., and must not be
distributed outside of the company without the
permission of Juniper Engineering.




1.  INTRODUCTION

This unit test plan covers the Nonstop Routing (NSR) support for RSVP
P2MP LSPs at the LSP ingress node.

RLI: 12173
Tracking PR: 588341
Functional Spec: http://cvs.juniper.net/cgi-bin/viewcvs.cgi/sw-projects/os/nsr/p2mp-nsr-ingress-funcspec.txt



2.  SCOPE

a. Functional coverage

All the functionality described in the functional spec will be
covered, including P2MP ingress NSR, CCC NSR and VT interface handling
on egress.

b. Software change description

See functional and design specs.

c. Feature intersection

The codebase used for development of this RLI also includes the new
RLI 9181 feature.

d. Platform and HW coverage scope

The tests will only be performed on M10i routers.



3.  SETUP

The setup is based on the existing test topology for the P2MP transit NSR feature: 
http://cvs.juniper.net/cgi-bin/viewcvs.cgi/sw-projects/os/nsr/p2mp-nsr-transit-utp.txt

3.1 Topology

JCML test scripts to setup the test topology can be found in the source tree:
src/functional-tests/apps/rpd/p2mp/nsr/p2mp_nsr_ingress*

The scripts setup the following topology using two physical
routers. R1 is the DUT which is going to perform NSR swichover. Thus
it needs two REs and it cannot have any logical routers
configured. The other router R0 is used to wrap around the DUT. Its
main routing instance and a couple of logical routers simulate the
rest of the network. Thus R0 needs to have an "lt" tunnel interface to
interconnect the LRs.


  22.0.0.4                      22.0.0.3                     1.0.0.2               1.0.0.4
  wfpro2-d           fe-0/0/0   wfpro2-c   t1-0/2/2          wfpro2-d   lt-1/2/0   wfpro2-d
     R0 ========================== R1 ------------------------- LR2 ----------------- LR4
     |               so-0/1/2      \                           /
     |                              \  fe-0/0/1               /
     |   lt-1/2/0                    \                       /  lt-1/2/0  
     |                                \                     /
    SRC                                ------------ LR3 ----
  wfpro2-d                                        wfpro2-d
  1.0.0.10                                        1.0.0.3

 
   R0 (wfpro2-d)     m10i
                     lo0.0          22.0.0.4
     R0-R0:          lt-1/2/0                                      
     R0-R1:          fe-0/0/0       3.1.1.1/24
     R0-R1-1:        t1-0/2/2       1.1.2.1/24
     R0-R1-2:        so-0/1/2       1.1.0.1/24
     R0-R1-3:        fe-0/0/1       1.1.3.1/24

   R1 (wfpro2-c)     m10i
                     lo0.0          22.0.0.3
     R0-R1:          fe-0/0/0       3.1.1.2/24
     R0-R1-1:        t1-0/2/2       1.1.2.2/24
     R0-R1-2:        so-0/1/2       1.1.0.2/24
     R0-R1-3:        fe-0/0/1       1.1.3.2/24


3.2 Configuration

3.2.1 Router R0

interfaces {
    fe-0/0/0 {
        unit 0 {
            family inet {
                address 3.1.1.1/24;
            }
            family mpls;
        }
    }
    so-0/1/2 {
        unit 0 {
            family inet {
                address 1.1.0.1/24;
            }
            family mpls;
        }
    }
    lt-1/2/0 {
        unit 0 {
            encapsulation ethernet;
            peer-unit 1;                
            family inet {               
                address 1.100.0.1/24;   
            }                           
            family mpls;                
        }                               
    }                                   
}                                       
routing-options {
    router-id 22.0.0.4;                 
    autonomous-system 100;              
    forwarding-table {                  
        traceoptions {                  
            file krt.log size 5m world-readable;
            flag all;                   
        }                               
    }                                   
}                                       
protocols {                             
    rsvp {                              
        traceoptions {                  
            file rsvp.log size 5m world-readable;
            flag all;                   
        }                               
        interface all;                  
        interface fxp0.0 {              
            disable;                    
        }                               
    }                                   
    mpls {                              
        traceoptions {                  
            file mpls.log size 5m world-readable;
            flag all;                   
        }                               
        inactive: label-switched-path to1 {
            to 22.0.0.3;                
            p2mp test;                  
        }                               
        interface all;
        interface fxp0.0 {
            disable;
        }
    }
    ospf {
        traffic-engineering;
        area 0.0.0.0 {
            interface all {
                metric 1;
            }
            interface fxp0.0 {
                disable;
            }
        }
    }
}

3.2.2 Logical Routers on R0

logical-systems {
    lr2 {
        interfaces {
            t1-0/2/2 {
                unit 0 {
                    family inet {
                        address 1.1.2.1/24;
                    }
                    family mpls;
                }
            }
            lt-1/2/0 {
                unit 23 {
                    encapsulation ethernet;
                    peer-unit 32;
                    family inet {
                        address 1.123.0.2/24;
                    }
                    family mpls;
                }
                unit 24 {
                    encapsulation ethernet;
                    peer-unit 42;
                    family inet {
                        address 1.124.0.2/24;
                    }
                    family mpls;
                }
            }
            lo0 {
                unit 2 {
                    family inet {
                        address 1.0.0.2/32;
                    }
                }
            }
        }
        protocols {
            rsvp {
                interface all;
            }
            mpls {
                interface all;
            }
            ospf {
                traffic-engineering;
                area 0.0.0.0 {
                    interface all;
                }
            }
        }
        routing-options {
            static {
                route 9.9.9.0/24 discard;
                route 9.9.9.2/32 receive;
            }
            router-id 1.0.0.2;
            autonomous-system 100;
        }
    }
    lr3 {
        interfaces {
            fe-0/0/1 {
                unit 0 {
                    family inet {
                        address 1.1.3.1/24;
                    }
                    family mpls;        
                }
            }
            lt-1/2/0 {
                unit 32 {
                    encapsulation ethernet;
                    peer-unit 23;
                    family inet {
                        address 1.123.0.3/24;
                    }
                    family mpls;
                }
            }
            lo0 {
                unit 3 {
                    family inet {
                        address 1.0.0.3/32;
                    }
                }
            }
        }
        protocols {
            rsvp {
                interface all;
            }
            mpls {
                inactive: label-switched-path 3to1 {
                    to 22.0.0.3;
                    p2mp lr3_test;
                }
                interface all;
            }
            ospf {
                traffic-engineering;
                area 0.0.0.0 {
                    interface all;
                }
            }
        }
        routing-options {
            static {
                route 9.9.9.0/24 discard;
                route 9.9.9.3/32 receive;
            }
            router-id 1.0.0.3;
        }
    }
    lr4 {
        interfaces {
            lt-1/2/0 {
                unit 42 {
                    encapsulation ethernet;
                    peer-unit 24;
                    family inet {       
                        address 1.124.0.4/24;
                    }
                    family mpls;
                }
            }
            lo0 {
                unit 4 {
                    family inet {
                        address 1.0.0.4/32;
                    }
                }
            }
        }
        protocols {
            rsvp {
                interface all;
            }
            mpls {
                inactive: label-switched-path 4to1 {
                    to 22.0.0.3;
                    p2mp lr4_test;
                }
                interface all;
            }
            ospf {
                traffic-engineering;
                area 0.0.0.0 {
                    interface all;
                }
            }
        }
        routing-options {
            static {
                route 9.9.9.0/24 discard;
                route 9.9.9.4/32 receive;
            }
            router-id 1.0.0.4;
            autonomous-system 100;
        }
    }
    src {
        interfaces {
            lt-1/2/0 {
                unit 1 {
                    encapsulation ethernet;
                    peer-unit 0;
                    family inet {
                        address 1.100.0.2/24;
                    }
                    family mpls;
                }
            }
            lo0 {
                unit 100 {
                    family inet {
                        address 1.0.0.10/32;
                    }
                }
            }
        }
        protocols {
            rsvp {
                interface all;
            }
            mpls {
                interface all;
            }
            ospf {
                traffic-engineering;
                area 0.0.0.0 {
                    interface all;
                }
            }
        }
        routing-options {               
            static {
                route 9.9.9.0/24 next-hop 1.100.0.1;
            }
            router-id 1.0.0.10;
        }
    }
}

3.2.3 DUT R1

system {
    commit synchronize;
}
chassis {
    redundancy {
        graceful-switchover;
    }                                   
}                                       
interfaces {                            
    fe-0/0/0 {                          
        unit 0 {                        
            family inet {               
                address 3.1.1.2/24;     
            }                           
            family mpls;                
        }                               
    }                                   
    fe-0/0/1 {                          
        unit 0 {                        
            family inet {               
                address 1.1.3.2/24;     
            }                           
            family mpls;                
        }                               
    }                                   
    so-0/1/2 {                          
        unit 0 {                        
            family inet {               
                address 1.1.0.2/24;     
            }                           
            family mpls;                
        }                               
    }                                   
    t1-0/2/2 {                          
        unit 0 {                        
            family inet {               
                address 1.1.2.2/24;     
            }                           
            family mpls;                
        }                               
    }                                   
}                                       
routing-options {                       
    nonstop-routing;                    
    static {                            
        route 9.9.9.0/24 {              
            p2mp-lsp-next-hop ingress_test;
        }                               
    }                                   
    router-id 22.0.0.3;                 
    forwarding-table {                  
        traceoptions {                  
            file krt.log size 5m world-readable;
            flag p2mp-next-hop;         
        }                               
        export pplb;                    
    }                                   
}                                       
protocols {                             
    rsvp {                              
        traceoptions {                  
            file rsvp.log size 5m world-readable;
            flag packets disable;       
            flag nsr-synchronization detail;
            flag error;                 
            flag route detail;          
            flag state;                 
            flag event;                 
        }                               
        interface all {                 
            link-protection;            
        }                               
        interface fxp0.0 {              
            disable;                    
        }                               
    }                                   
    mpls {                              
        statistics {          
            display-id;                 
        }                               
        traceoptions {                  
            file mpls.log size 5m world-readable;
            flag all;                   
            flag nsr-synchronization-detail;
            flag connection-detail;     
        }                               
        inactive: label-switched-path to4ingress {
            to 1.0.0.4;                 
            p2mp ingress_test;          
        }                               
        inactive: label-switched-path to3ingress {
            to 1.0.0.3;                 
            p2mp ingress_test;          
        }                               
        inactive: label-switched-path to2ingress {
            to 1.0.0.2;                 
            p2mp ingress_test;          
        }                               
        inactive: label-switched-path to2via3ingress {
            to 1.0.0.2;                 
            p2mp ingress_test;          
            primary to2via3;            
        }                               
        inactive: label-switched-path to0ingress {
            to 22.0.0.4;                
            p2mp ingress_test;          
        }                               
        inactive: label-switched-path to0ingressB {
            to 22.0.0.4;                
            p2mp ingress_test;          
        }                               
        inactive: label-switched-path p2p {
            to 1.0.0.4;                 
            adaptive;                   
        }                               
        inactive: label-switched-path toSrc {
            to 1.0.0.10;                
            p2mp ingress_test;          
        }                               
        path to2via3 {                  
            1.0.0.3 strict;             
            1.0.0.2 strict;             
        }                               
        path to3via2 {
            1.0.0.2 strict;
            1.0.0.3 strict;
        }
        path to4via2 {
            1.0.0.2 strict;
            1.0.0.4 strict;
        }                                       
        interface all;                  
        interface fxp0.0 {              
            disable;                    
        }                               
    }                                   
    ospf {                              
        traffic-engineering;            
        area 0.0.0.0 {                  
            interface all {             
                metric 1;               
            }                           
            interface fxp0.0 {          
                disable;                
            }                           
            interface so-0/1/2.0 {      
                metric 100;             
            }                           
            interface t1-0/2/2.0 {      
                metric 1;               
            }                           
            interface fe-0/0/0.0 {      
                metric 1;               
            }                           
        }                               
    }                                   
}                                       
policy-options {                        
    policy-statement pplb {             
        then {                          
            load-balance per-packet;    
        }                               
    }                                   
}                                       


3.3 Actual Hardware Used for Test Execution

regress@wfpro2-c1> show chassis hardware 
Hardware inventory:
Item             Version  Part number  Serial number     Description
Chassis                                B0744             M10i
Midplane         REV 06   710-008920   DK5587            M10i Midplane
Power Supply 0   Rev 08   740-008537   TE50803           AC Power Supply
Power Supply 1   Rev 08   740-008537   TE50813           AC Power Supply
HCM 0            REV 05   710-010580   DK5480            M10i HCM
HCM 1            REV 05   710-010580   DK5471            M10i HCM
Routing Engine 0 REV 07   740-011202   1000727006        RE-850
Routing Engine 1 REV 07   740-011202   1000724458        RE-850
CFEB 0           REV 09   750-010465   DJ4820            Internet Processor II
FPC 0                                                    E-FPC
  PIC 0          REV 12   750-002992   RG1595            4x F/E, 100 BASE-TX
  PIC 1          REV 11   750-002971   RG1691            4x OC-3 SONET, MM
  PIC 2          REV 10   750-003869   DE8311            4x T1, RJ48
FPC 1                                                    E-FPC
  PIC 0          REV 12   750-002992   RG0767            4x F/E, 100 BASE-TX
  PIC 2          REV 06   750-002982   DE9761            1x Tunnel
Fan Tray 1                                               Rear Right Fan Tray



4. FUNCTIONAL TEST CASES

4.1 Basic Ingress LSP Switchover

4.1.1 One and Two Hop Sub-LSPs

  Goal: Test switchover of basic ingress case with and without static route entry
        for the P2MP LSP. Include one-hop (no label switching) and two-hop (label
	push) sub-LSPs.

  Test Setup:
	Activate "to3ingress" and "to4ingress" on DUT.
	A static route is configured for the P2MP LSP.

  Test Steps:
	1. Bring up LSPs
	2. Force failover via CLI
	3. Deactivate the route entry:
	   deactivate routing-options static route 9.9.9.0/24
	4. Force another failover
	5. Deactivate the LSPs

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result: 


4.1.2 MBB Triggered by Metric Change

  Goal: Test switchover at ingress while MBB is in progress. Trigger MBB by
	changing the link metric.

  Test Setup:
	Activate "to3ingress" and "to4ingress" on DUT.
	Use default metric configuration to force to3ingress to go via
	the R1-LR3 link and to4ingress go via R1-LR2-LR4.

  Test Steps:
	1. Bring up LSPs
	2. Increase metric on R1-LR2 link:
	   set protocols ospf area 0 interface t1-0/2/2.0 metric 100
	3. Wait until MBB is triggered and two LSP instances exist
	4. Force failover via CLI
	5. Wait for MBB to complete and trigger a new MBB reroute
	   by changing the metrics
	   set protocols ospf area 0 interface t1-0/2/2.0 metric 1
	   set protocols ospf area 0 interface fe-0/0/1.0 metric 100
	6. Wait until MBB is triggered and two LSP instances exist
	7. Force another failover
	8. Deactivate the LSPs

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result: 


4.1.3 MBB Triggered by LSP Bandwdith Configuration Change

  Goal: Test switchover at ingress while MBB is in progress. Trigger MBB by
	changing the label-switched-path configuration.

  Test Setup:
	Activate "to3ingress" and "to4ingress" on DUT.

  Test Steps:
	1. Bring up LSPs
	2. Change bandwidth on all LSPs:
	   set protocols mpls label-switched-path to3ingress bandwidth 1000
	   set protocols mpls label-switched-path to4ingress bandwidth 1000
	3. Wait until MBB is triggered and two LSP instances exist
	4. Force failover via CLI
	5. Wait for MBB to complete and trigger a new MBB reroute
	   by deleting the bandwidth config:
	   delete protocols mpls label-switched-path to3ingress bandwidth 1000
	   delete protocols mpls label-switched-path to4ingress bandwidth 1000
	6. Wait until MBB is triggered and two LSP instances exist
	7. Force another failover
	8. Deactivate the LSPs

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result: 


4.1.4 Changing LSP Configuration from P2P to P2MP

  Goal: Verify that the NSR replication logic does not get confused when
	changing the LSP configuration from P2P to P2MP or vice versa.

  Test Setup:
	Activate "to3ingress" and "to4ingress" on DUT.

  Test Steps:
	1. Bring up LSPs
	2. Remove p2mp configuration:
	   delete protocols mpls label-switched-path to3ingress p2mp
	   delete protocols mpls label-switched-path to4ingress p2mp
	3. Force failover via CLI
	4. Configure p2mp again:
	   set protocols mpls label-switched-path to3ingress p2mp ingress_test
	   set protocols mpls label-switched-path to4ingress p2mp ingress_test
	5. Force another failover
	6. Deactivate the LSPs

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result: 


4.1.5 No-CSPF Sub-LSPs

  Goal: Verify that no-cspf sub-LSPs are handled correctly.

  Test Setup:
	Activate "to3ingress", "to4ingress" and "toSrc" on DUT.

  Test Steps:
	1. Bring up LSPs
	2. Configure one of them with "no-cspf":
	   set protocols mpls label-switched-path to3ingress no-cspf
	   set protocols mpls label-switched-path to3ingress primary to3via2
	3. Force failover via CLI
	4. Configure alll sub-LSPs with "no-cspf":
	   set protocols mpls label-switched-path to4ingress no-cspf
	   set protocols mpls label-switched-path to4ingress primary to4via2
	   set protocols mpls label-switched-path toSrc no-cspf
	5. Force another failover
	6. Deactivate the LSPs

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result: 


4.1.6 Explicit Path

  Goal: Verify that LSPs configured with explicit paths are handled correctly.

  Test Setup:
	Activate "to3ingress" and "to4ingress" on DUT.

  Test Steps:
	1. Configure a strict and a non-strict path:
	   set protocols mpls label-switched-path to3ingress primary to3via2
	   set protocols mpls path via2 1.0.0.2
	   set protocols mpls label-switched-path to4ingress primary via2
	2. Bring up LSPs
	3. Force failover via CLI
	4. Remove explicit path configuration:
	   delete protocols mpls label-switched-path to3ingress primary to3via2
	   delete protocols mpls path via2 1.0.0.2
	   delete protocols mpls label-switched-path to4ingress primary via2
	5. Force another failover
	6. Deactivate the LSPs

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result: 


4.1.7 Admin-Group

  Goal: Check the handling of admin-group constraints

  Test Setup:
	Activate "to3ingress", "to4ingress", and "toSrc" on DUT.

  Test Steps:
	1. Configure various admin-group constraints for the three sub-LSPs
	2. Bring up LSPs
	3. Force failover via CLI
	4. Reconfigure admin-group constraints
	5. Force another failover
	6. Deactivate the LSPs

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result: 


4.2 Link-Protection

4.2.1 One-Hop Bypass on P2MP Ingress Router

  Goal: Verify correct replication of link-protected LSPs.

  Test Setup:
	Repeat this test for 4 different bypass scenarios:
	a) 1-hop bypass over p2p link, 1-hop protected sub-LSP
	b) 1-hop bypass over ethernet link, 1-hop protected sub-LSP
	c) 1-hop bypass over p2p link, 2-hop protected sub-LSP
	d) 1-hop bypass over ethernet link, 2-hop protected sub-LSP

  Test Steps:
	1. Configure and activate the sub-LSP
	2. Wait for link-protection to become established
	3. Force failover via CLI
	4. Force another failover
	5. Deactivate the LSP

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.2.2 Two-Hop Bypass on P2MP Ingress Router

  Goal: Verify correct replication of link-protected LSPs.

  Test Setup:
	Repeat this test for 4 different bypass scenarios:
	a) 2-hop bypass over p2p link, 1-hop protected sub-LSP
	b) 2-hop bypass over ethernet link, 1-hop protected sub-LSP
	c) 2-hop bypass over p2p link, 2-hop protected sub-LSP
	d) 2-hop bypass over ethernet link, 2-hop protected sub-LSP

  Test Steps:
	1. Configure and activate the sub-LSP
	2. Wait for link-protection to become established
	3. Force failover via CLI
	4. Force another failover
	5. Deactivate the LSP

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.2.3 One-Hop Bypass on P2MP Transit Router

  Goal: Verify correct replication of link-protected LSPs.

  Test Setup:
	Repeat this test for 4 different bypass scenarios:
	a) 1-hop bypass over p2p link, 1-hop protected sub-LSP
	b) 1-hop bypass over ethernet link, 1-hop protected sub-LSP
	c) 1-hop bypass over p2p link, 2-hop protected sub-LSP
	d) 1-hop bypass over ethernet link, 2-hop protected sub-LSP

  Test Steps:
	1. Configure and activate the sub-LSP
	2. Wait for link-protection to become established
	3. Force failover via CLI
	4. Force another failover
	5. Deactivate the LSP

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.2.4 Two-Hop Bypass on P2MP Transit Router

  Goal: Verify correct replication of link-protected LSPs.

  Test Setup:
	Repeat this test for 4 different bypass scenarios:
	a) 2-hop bypass over p2p link, 1-hop protected sub-LSP
	b) 2-hop bypass over ethernet link, 1-hop protected sub-LSP
	c) 2-hop bypass over p2p link, 2-hop protected sub-LSP
	d) 2-hop bypass over ethernet link, 2-hop protected sub-LSP

  Test Steps:
	1. Configure and activate the sub-LSP
	2. Wait for link-protection to become established
	3. Force failover via CLI
	4. Force another failover
	5. Deactivate the LSP

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.2.5 Mix of Link-Protected and Unprotected Sub-LSPs

  Goal: Verify correct replication of link-protected LSPs.

  Test Setup:
	Activate "to3ingress", "to4ingress", and "toSrc" and configure
	link-protection for the first two.

  Test Steps:
	1. Wait for link-protection to become established
	2. Force failover via CLI
	3. Force another failover
	4. Deactivate the LSPs

  Success Criteria:
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.3 CCC

4.3.1 One-Hop Bypass on P2P Ingress Router with CCC

  Goal: Verify correct replication of link-protected CCC LSPs.

  Test Setup:
	Repeat this test for 2 different bypass scenarios:
	a) 1-hop bypass over p2p link
	b) 1-hop bypass over ethernet link

  Test Steps:
	1. Configure CCC on DUT:
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	   set protocols connections p2mp-transmit-switch t
	       transmit-p2mp-lsp ingress_test input-interface so-0/1/1.0
	2. Configure CCC on R0:
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	   set protocols connections p2mp-receive-switch r
	       receive-p2mp-lsp ingress_test output-interface so-0/1/1.0
	3. Configure ospf metric on interfaces between R0 and DUT
	   to force protected LSP over p2p or ethernet link (depending on test)
	3. Activate "to0ingress"
	4. Force failover via CLI

  Success Criteria:
	- Using "show connections", check that the CCC state is correct
	on both master and backup RE before and after failover.
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.3.2 Two-Hop Bypass on P2P Ingress Router with CCC

  Goal: Verify correct replication of link-protected CCC LSPs.

  Test Setup:
	Repeat this test for 2 different bypass scenarios:
	a) 2-hop bypass over p2p link
	b) 2-hop bypass over ethernet link

  Test Steps:
	1. Configure CCC on DUT:
	   set protocols connections p2mp-transmit-switch t
	       transmit-p2mp-lsp ingress_test input-interface so-0/1/1.0
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	2. Configure CCC on LR2:
	   set interfaces so-0/1/1 encapsulation ppp-ccc
	   set logical-systems lr2 interfaces so-0/1/1 unit 0
	   set logical-systems lr2 protocols connections p2mp-receive-switch r
	       receive-p2mp-lsp ingress_test output-interface so-0/1/1.0
	3. Activate "to2ingress"
	4. Force failover via CLI

  Success Criteria:
	- Using "show connections", check that the CCC state is correct
	on both master and backup RE before and after failover.
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.3.3 One-Hop Bypass on P2MP Ingress Router with CCC

  Goal: Verify correct replication of link-protected CCC LSPs.

  Test Setup:
	Repeat this test for 2 different bypass scenarios:
	a) 1-hop bypass over p2p link
	b) 1-hop bypass over ethernet link

  Test Steps:
	1. Configure CCC on DUT:
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	   set protocols connections p2mp-transmit-switch t
	       transmit-p2mp-lsp ingress_test input-interface so-0/1/1.0
	2. Configure CCC on R0:
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	   set protocols connections p2mp-receive-switch r
	       receive-p2mp-lsp ingress_test output-interface so-0/1/1.0
	3. Configure ospf metric on interfaces between R0 and DUT
	   to force protected LSP over p2p or ethernet link (depending on test)
	3. Activate "to0ingress"
	4. Force failover via CLI

  Success Criteria:
	- Using "show connections", check that the CCC state is correct
	on both master and backup RE before and after failover.
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.3.4 Two-Hop Bypass on P2MP Ingress Router with CCC

  Goal: Verify correct replication of link-protected CCC LSPs.

  Test Setup:
	Repeat this test for 2 different bypass scenarios:
	a) 2-hop bypass over p2p link
	b) 2-hop bypass over ethernet link

  Test Steps:
	1. Configure CCC on DUT:
	   set protocols connections p2mp-transmit-switch t
	       transmit-p2mp-lsp ingress_test input-interface so-0/1/1.0
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	2. Configure CCC on LR2:
	   set interfaces so-0/1/1 encapsulation ppp-ccc
	   set logical-systems lr2 interfaces so-0/1/1 unit 0
	   set logical-systems lr2 protocols connections p2mp-receive-switch r
	       receive-p2mp-lsp ingress_test output-interface so-0/1/1.0
	3. Activate "to2ingress"
	4. Force failover via CLI

  Success Criteria:
	- Using "show connections", check that the CCC state is correct
	on both master and backup RE before and after failover.
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.3.5 CCC P2MP Ingress and LMI Kernel Updates

  Goal: Verify that LMI kernel udpates are only sent in master mode.
	Verify that CCC P2MP ingress replication works.

  Test Setup:
	Configure CCC P2MP transmit-switch on DUT. Use a 1-hop and 2-hop sub-LSP.

  Test Steps:
	1. Configure CCC on DUT:
	   set protocols connections p2mp-transmit-switch t
	       transmit-p2mp-lsp ingress_test input-interface so-0/1/1.0
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	2. Configure CCC on LR3:
	   set interfaces so-0/1/1 encapsulation ppp-ccc
	   set logical-systems lr3 interfaces so-0/1/1 unit 0
	   set logical-systems lr3 protocols connections p2mp-receive-switch r
	       receive-p2mp-lsp ingress_test output-interface so-0/1/1.0
	3. Configure CCC on LR4:
	   set interfaces so-0/1/0 encapsulation ppp-ccc
	   set logical-systems lr4 interfaces so-0/1/0 unit 0
	   set logical-systems lr4 protocols connections p2mp-receive-switch r
	       receive-p2mp-lsp ingress_test output-interface so-0/1/0.0
	4. Activate "to3ingress" and "to4ingress"
	5. Force failover via CLI

  Success Criteria:
	- Enable CCC detailed tracing and check log file for kernel
	status updates.  They should only be sent on the master. When
	backup becomes master, the kernel updates need to be enabled.
	- Using "show connections", check that the CCC state is correct
	on both master and backup RE before and after failover.
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.3.6 CCC P2MP Egress

  Goal: Verify that CCC P2MP egress replication works.

  Test Setup:
	Configure CCC P2MP receive-switch on DUT.

  Test Steps:
	1. Configure CCC on DUT:
	   set protocols connections p2mp-receive-switch r3
	       receive-p2mp-lsp lr3_test output-interface so-0/1/0.0
	   set interfaces so-0/1/0 encapsulation ppp-ccc unit 0
	   set protocols connections p2mp-receive-switch r4
	       receive-p2mp-lsp lr4_test output-interface so-0/1/1.0
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	2. Configure CCC on LR3:
	   set interfaces so-0/1/1 encapsulation ppp-ccc
	   set logical-systems lr3 interfaces so-0/1/1 unit 0
	   set logical-systems lr3 protocols connections p2mp-transmit-switch t
	       transmit-p2mp-lsp lr3_test input-interface so-0/1/1.0
	3. Configure CCC on LR4:
	   set interfaces so-0/1/0 encapsulation ppp-ccc
	   set logical-systems lr4 interfaces so-0/1/0 unit 0
	   set logical-systems lr4 protocols connections p2mp-transmit-switch t
	       transmit-p2mp-lsp lr4_test input-interface so-0/1/0.0
	4. Activate "4to1" on LR4 and "3to1" on LR3
	5. Force failover via CLI

  Success Criteria:
	- Using "show connections", check that the CCC state is correct
	on both master and backup RE before and after failover.
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.3.7 CCC P2MP Bud Node

  Goal: Verify that CCC P2MP bud node replication works.

  Test Setup:
	Configure CCC P2MP receive-switch on DUT.

  Test Steps:
	1. Configure CCC egress on DUT:
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	   set protocols connections p2mp-receive-switch r
	       receive-p2mp-lsp test output-interface so-0/1/1.0
	2. Configure CCC ingress on R0:
	   set interfaces so-0/1/1 encapsulation ppp-ccc unit 0
	   set protocols connections p2mp-transmit-switch t
	       transmit-p2mp-lsp test input-interface so-0/1/1.0
	3. Activate "to1", "to3", and "to4" on R0
	4. Force failover via CLI

  Success Criteria:
	- Using "show connections", check that the CCC state is correct
	on both master and backup RE before and after failover.
	- Using the "show rsvp session", "show krt flood-nexthop", "show
	route" and "show route forwarding-table" commands, check that
	the signaling and forwarding state is correctly replicated to the
	backup before and after the failover.
	- After the LSPs have been brought down, check for any memory leaks
	or leftover state using the "show krt flood-nexthop",
	"show krt next-hop ...", "show krt mcnh p2mp", and "show route ..."
	commands.

  Result:


4.3.8 CCC P2P

  Goal: Verify that CCC P2P replication works.

  Test Setup:
	Configure CCC remote-interface-switch, lsp-switch and interface-switch
	on DUT.

  Test Steps:
	1. Configure variety of CCC switch statement on DUT and corresponding
	   switch statements on LR3 and LR4.
	2. Activate "4to1" on LR4 and "3to1" on LR3
	3. Force failover via CLI

  Success Criteria:
	- Using "show connections", check that the CCC state is correct
	on both master and backup RE before and after failover.
	- Using the "show rsvp session", "show route" and
	"show route forwarding-table" commands, check that the signaling
	and forwarding state is correctly replicated to the
	backup before and after the failover.

  Result:


4.4 VT Interfaces on Egress

4.4.1 Failover With tunnel-services Configured

  Goal: Make DUT a bud node with UHP configured and test failover.

  Test Setup:
	Configure tunnel-services on DUT: set protocols rsvp tunnel-services.

  Test Steps:
	1. Activate "to1" and "to4" on R0
	2. Wait for LSPs to come up and then trigger failover.

  Success Criteria:
	- "show rsvp interfaces" shows one vt interface on master
	  and backup before and after switchover.
	- Signaling and forwarding state are correct before and after
	  switchover.

  Result:


4.4.2 Failover With tunnel-services And ULA

  Goal: Configure DUT for UHP and test failover.
	Additionally, configure ULA to create additional VT
	interfaces and check that no harm is done.

  Test Setup:
	Configure tunnel-services on DUT: set protocols rsvp tunnel-services.

  Test Steps:
	1. Configure ULA on R0:
	   set protocols mpls label-switched-path to1 upstream-assignment
	   set routing-options rib inet6.0 static route abc::1
	       p2mp-lsp-next-hop test lsp-context rsvp-te 1000042
	2. Configure ULA on LR4:
	   set protocols mpls label-switched-path 4to1 to 22.0.0.3
	   set protocols mpls label-switched-path 4to1 p2mp lr4_test
	   set protocols mpls label-switched-path 4to1 upstream-assignment
	   set routing-options static route 7.7.7.0/24
	       p2mp-lsp-next-hop lr4_test lsp-context rsvp-te 1000043
	3. Configure ULA on R1 for egress "to1" and "4to1":
	   set protocols rsvp tunnel-services lsp-aggregation
	   set protocols rsvp upstream-label-lookups
	   set protocols mpls lsp-egress-context label-switched-path test
	       rsvp-te 1000042 next-table inet6.0
	   set protocols mpls lsp-egress-context label-switched-path lr4_test
	       rsvp-te 1000043 next-table inet.0
	4. Activate "to1" and "4to1"
	5. Force failover via CLI
	6. Force another failover via CLI
	7. Deactivate all sub-LSPs

  Success Criteria:
	- "show rsvp interfaces" shows the correct vt interfaces on master
	  and backup before and after switchover.
	- Signaling and forwarding state are correct before and after
	  switchover.

  Result:


4.5 P2MP Applications

There is no NSR support for P2MP TAI applications. These tests ensure
that when NSR and VPLS or MVPN is configured, no unexpected problems occur and
the new master will ultimately bring up the P2MP and VPLS/MVPN state.
Likewise, static P2MP LSPs used by VPLS/MVPN will be tested.

4.5.1 VPLS

4.5.2 MVPN


4.6 Handling of Switchover Error Conditions

All the tests in this section are performed by instrumenting the code
to force an unexpected error/race condition where the new master
experiences a different environment than what the old master last saw.

4.6.1 LSP no Longer Meets Constraints

  Goal: Verify that the new master correctly handles a replicated
	ingress P2MP LSP which no longer satisfies its constraints
	when the switchover occurs.

  Test Setup:
	Configure sub-LSP with admin-group constraint and instrument code so
	that the new master's TED invalidates the current path.


4.6.2 Bypass Tunnel no Longer Meets Constraints

Same as above but for bypass LSP.


4.6.3 Incomplete Replication

  Goal: Verify the handling of incomplete protocol replication state which
	does not match the kernel replication state.

  Test Setup:
	Establish a P2MP ingress LSP on the old master but instrument the code
	so that the backup does not receive all of the replication info.


4.7 MIB

  Goal: Verify that P2MP MIB access continues to work after failover.

  Test Setup:
	Activate several ingress sub-LSPs on DUT.

  Test Steps:
	1. Walk the P2MP MIB
	2. Force failover via CLI
	3. Walk the P2MP MIB



5.  BOUNDARY TEST CASES

Boundary test cases are included in section 4.



6.  GRES TEST CASES

6.1 GR with P2MP Ingress LSPs

  Goal: Verify there is no regression in GRES functionality.

  Test Setup: Deactivate NSR configuration on the DUT and instead
	configure it for graceful restart. Activate multiple sup-LSPs
	on the DUT.

  Test Steps:
	1. Deactivate NSR and activate graceful restart:
	   set routing-options graceful-restart
	2. Activate "to3ingress" and "to4ingress" on R1 and configure
	   a static route for it
	3. Restart routing

  Success Criteria:
	1. All PFE forwarding state related to the LSPs remains in place
	   during the restart.

	2. At the end of the restart period, the LSP state, related routing
	   table entries and flood NHs are essentially the same as before.	

  Result:


6.2 UHP / VT interfaces

  Goal: Verify there is no regression in GRES functionality caused by the
	change in VT interface handling on the egress.

  Test Setup: Deactivate NSR configuration on the DUT and instead
	configure it for graceful restart. Activate sup-LSPs
	on R0 and LR4 to test the egress and bud node roles of R1.

  Test Steps:
	1. Deactivate NSR and activate graceful restart:
	   set routing-options graceful-restart
	2. Activate "to1" and "to3" on R0
	3. Activate "4to1" on LR4
	4. Restart routing

  Success Criteria:
	1. All PFE forwarding state related to the LSPs remains in place
	   during the restart.

	2. At the end of the restart period, the LSP state, related routing
	   table entries and flood NHs are essentially the same as before.	

  Result:



7.  ISSU TEST CASES

The M10i chassis used for unit testing does not support ISSU, so this
will not be tested.



8. TX TEST CASES

Not tested.



9.  AGGREGATED ETHERNET/SONET TEST CASES
 
Not tested.


 
10.  REGRESSION TEST CASES

Except for the GRES test cases, no explicit regression testing is done
as part of this UTP. But almost all the test cases implicitly also
verify the existing P2MP functionality.



11.  INTEROPERABILITY TEST CASES

No interop testing will be performed.



12.  MIGRATION & COMPATIBILITY TEST CASES

N/A



13.  TEST COVERAGE REMAINING

Scaling testing is not part of this UTP. Scenarios with a larger
number of branches, P2MP LSPs and interfaces will need to be tested.

The ISSU test cases can not be performed on the chosen test setup
and still need to be done.

There are a large number of configuration options for LSPs. All of
these options and permuations of them cannot be tested.



14.  DEFECTS REMAINING

{List PRs filed at dev complete for test failures from this plan
which were not fixed by dev complete.}
(Provide estimate on # of defects which downstream test is expected to find)



15. SCALING AND PERFORMANCE
 
This RLI should not significantly affect the scaling and performance
numbers. Verification will be done by system test.



16. STATIC ANALYSIS 

{ Perform static analysis on new code and provide results proving new code has not introduced any new issues.
 Results should be a summary of tool output indicating proof of execution related to the affected code base}



17. CODE COVERAGE

No code coverage analysis will be performed.



18. AUTOMATION

{Provide list of testcases from above which have been automated: example: 
Provide location of the automated unit test(s) }

Test case number        Scriptable    Scripted
-----------------------  ----------   ----------- 
# Testcase1                   Y            Y              
# Testcase2                   Y            Y                  
# ...
# HA/GRES testcase            N            Y         
-----------------------  -----------   --------- 

TOTAL: 
Automatable / total TC = xx%
Automated / Automatable = xx%

Location: cvs/..



19. UNIT TEST PLAN REVIEW FEEDBACK

(A) A formal Review of the final Test Plan draft must be held with the following participants

- Responsible Development Engineer (Software): Host, mandatory, interactive presence required (in person or over the phone)
- Responsible Test Engineer: Mandatory, interactive presence required (in person or over the phone)
  {If needed the Test Manager can represent the Responsible Test Engineer}
- Area Lead or Expert (may be a Software or Systest Manager): Mandatory (e-mail feedback accepted)


The review minutes and agreed action items must be captured <somewhere>
for the review of the test plan during the scheduled SW release. The notification list must contain 
all mandatory and invited people. Subsequent changes to the test plan or closure of action items must
be captured <somewhere>, which will trigger an automatic notification to all reviewers.

